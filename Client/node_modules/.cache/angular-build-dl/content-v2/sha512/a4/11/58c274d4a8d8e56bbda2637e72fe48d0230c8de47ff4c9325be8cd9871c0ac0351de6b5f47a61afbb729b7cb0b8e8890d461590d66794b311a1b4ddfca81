{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/add-book/add-book.component.ts","webpack:///src/app/components/add-book/add-book.component.html","webpack:///src/app/components/admin/admin.component.ts","webpack:///src/app/components/admin/admin.component.html","webpack:///src/app/components/book/book.component.ts","webpack:///src/app/components/book/book.component.html","webpack:///src/app/components/books-page/books-page.component.ts","webpack:///src/app/components/books-page/books-page.component.html","webpack:///src/app/components/change-password/change-password.component.ts","webpack:///src/app/components/change-password/change-password.component.html","webpack:///src/app/components/events-page/events-page.component.ts","webpack:///src/app/components/events-page/events-page.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/profiles-page/profiles-page.component.html","webpack:///src/app/components/profiles-page/profiles-page.component.ts","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/search/search.component.ts","webpack:///src/app/components/search/search.component.html","webpack:///src/app/components/table/table.component.ts","webpack:///src/app/components/table/table.component.html","webpack:///src/app/components/user.directive.ts","webpack:///src/app/services/book.service.ts","webpack:///src/app/services/comment.service.ts","webpack:///src/app/services/data.service.ts","webpack:///src/app/services/event.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/app/services/validator.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddBookComponent","bookService","knjiga","slika","naziv","autor","datumIzdavanja","zanr","opis","prosecnaOcena","brStrana","odobrena","dodajKnjigu","AdminComponent","BookComponent","commentService","data","userService","commentsTableColumns","isReadingBookInfo","ulogovaniKorisnik","nadjiKorisnikaId","dohvatiKorisnika","undefined","loadedBook","subscribe","book","ucitanaKnjiga","console","log","prikaziKjigu","loadToggles","loadComments","loadUserComment","procitao","procitaneKnjige","includes","citam","loaded","citamKnjige","forEach","element","zaCitanje","zaCitanjeKnjige","komentari","nadjiKnjigaKomentare","length","showTable","nadjiKomentar","komentar","ocena","izmeniKomentar","dodajKomentar","korisnickoIme","requestedUser","changeRequestedUser","changeTab","toggledCita","event","save","toggledZaCitanje","match","push","saveChanges","splice","indexOf","sacuvajKorisnika","BooksPageComponent","location","showBook","showAddBook","showBooksTableParams","searchObject","searchParams","linkParam","tableData","headerMap","button","buttonLabel","setShowTable","showBooksTable","requestedBook","loggedUserAT","AT","openBook","changeRequestedBook","setTableData","setLoadedBook","nadjiKnjiguNaziv","bookChild","show","ChangePasswordComponent","router","emailAuthenticated","back","navigate","EventsPageComponent","eventService","showEventsTableParams","getAllEvents","aktivno","HomeComponent","selectedTab","setLoggedUserAT","setValue","setTabs","logButton","LoginComponent","validatorService","username","password","postaviKorisnika","ime","prezime","lozinka","datumRodjenja","grad","drzava","email","userFound","validateUsername","validatePassword","korisnikLogIn","login","changePassword","register","guest","ProfileComponent","editButtonLabel","editDisabled","booksTableReadColumns","booksTableReadingColumns","booksTableToReadColumns","tableSizeInitial","tableSizeOptions","loadedUser","user","korisnik","prikaziKorisnika","tableDataArray","filter","tableMaxLength","nadjiKorisnikKomentare","nadjiKnjiguId","firstCut","pageIndex","pageSize","secondCut","slice","onPageChanged","ProfilesPageComponent","showUser","showUserTableParams","showUserTable","openProfile","setLoadedUser","nadjiKorisnikaKorisnickoIme","profileChild","RegisterComponent","siteKey","captchaCheck","usernameCheck","passwordCheck","emailCheck","validateEmail","dodajKorisnika","SearchComponent","showAddOption","searchHint","hintParams","Array","string","searchResponse","nadjiKnjigu","searchQuery","emit","nadjiKorisnika","$event","value","search","TableComponent","linkClick","tableParams","nesto","obj","UserDirective","BookService","fillKnjigeLista","knjigeLista","bookFound","x","searchParam","isArray","some","providedIn","CommentService","fillKomentariLista","korisnikId","knjigaId","komentarLista","y","pronadjeniKomentari","DataService","loggedUserATSource","asObservable","requestedUserSource","loadedBookSource","loadedUserSource","requestedBookSource","selectedTabSource","tableDataSource","showTableSource","at","next","sessionStorage","setItem","JSON","stringify","parse","getItem","newRequestedUser","newRequestedBook","index","params","EventService","fillDesavanjaLista","desavanjeLista","privatno","pocetak","Date","kraj","kreator","UserService","fillPreduzeceLista","axiosRequest","a","create","baseURL","timeout","korisnikLista","get","response","err","ValidatorService","usernameRegEx","RegExp","emailEgEx","passwordRegEx","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\n/* U sustini ovo je URL nastavak na inicijalnih 'localhost:4200/' i poziv komponente koja odgovara trazenoj stranici */\r\nconst routes: Routes = [\r\n  {\r\n    path:'' , redirectTo: 'login', pathMatch: 'full'\r\n  },\r\n  {\r\n    path:'login' , component: LoginComponent\r\n  },\r\n  {\r\n    path:'change' , redirectTo: 'login', pathMatch: 'full'\r\n  },\r\n  {\r\n    path:'change/password' , component: ChangePasswordComponent\r\n  },\r\n  {\r\n    path:'register' , component:RegisterComponent\r\n  },\r\n  {\r\n    path:'home' , component: HomeComponent\r\n  },\r\n  {\r\n    path:'profile' , component: ProfileComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Projekat';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser'\r\nimport { NgModule } from '@angular/core'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { MatTabsModule } from '@angular/material/tabs'\r\nimport { MatFormFieldModule } from '@angular/material/form-field'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatCardModule } from '@angular/material/card'\r\nimport { MatPaginatorModule } from '@angular/material/paginator'\r\nimport { MatDatepickerModule } from '@angular/material/datepicker'\r\nimport { MatNativeDateModule } from '@angular/material/core'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatDividerModule } from '@angular/material/divider'\r\nimport { MatListModule } from '@angular/material/list'\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\r\nimport { NgxCaptchaModule } from 'ngx-captcha'\r\nimport { MatRadioModule } from '@angular/material/radio'\r\n\r\nimport { AppRoutingModule } from './app-routing.module'\r\nimport { AppComponent } from './app.component'\r\nimport { LoginComponent } from './components/login/login.component'\r\nimport { AdminComponent } from './components/admin/admin.component'\r\nimport { RegisterComponent } from './components/register/register.component'\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component'\r\nimport { HomeComponent } from './components/home/home.component'\r\nimport { UserDirective } from './components/user.directive'\r\nimport { ProfileComponent } from './components/profile/profile.component'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BookComponent } from './components/book/book.component';\r\nimport { BooksPageComponent } from './components/books-page/books-page.component';\r\nimport { AddBookComponent } from './components/add-book/add-book.component';\r\nimport { ProfilesPageComponent } from './components/profiles-page/profiles-page.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { EventsPageComponent } from './components/events-page/events-page.component';\r\nimport { TableComponent } from './components/table/table.component'\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AdminComponent,\r\n    RegisterComponent,\r\n    ChangePasswordComponent,\r\n    HomeComponent,\r\n    UserDirective,\r\n    ProfileComponent,\r\n    BookComponent,\r\n    BooksPageComponent,\r\n    AddBookComponent,\r\n    ProfilesPageComponent,\r\n    SearchComponent,\r\n    EventsPageComponent,\r\n    TableComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatPaginatorModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatSlideToggleModule,\r\n    MatProgressBarModule,\r\n    NgxCaptchaModule,\r\n    MatRadioModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Knjiga } from 'src/app/modules/Knjiga';\r\nimport { BookService } from 'src/app/services/book.service';\r\n\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styleUrls: ['./add-book.component.css']\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n  knjiga:Knjiga\r\n\r\n  constructor(private bookService:BookService) {\r\n    this.knjiga = {\r\n      id: 1,\r\n      slika: 'asd',\r\n      naziv: '',\r\n      autor: [],\r\n      datumIzdavanja: '',\r\n      zanr: [],\r\n      opis: '',\r\n      prosecnaOcena: 0,\r\n      brStrana: 0,\r\n      odobrena: false\r\n    }\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  dodajKnjigu():void {\r\n    this.bookService.dodajKnjigu(this.knjiga)\r\n  }\r\n\r\n}\r\n","<br>\r\n<mat-card class=\"mat-elevation-z8\">\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Naziv:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.naziv\" value=\"{{ knjiga.naziv }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Autor:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.autor\" value=\"{{ knjiga.autor[0] }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Datum izdavanja:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.datumIzdavanja\" value=\"{{ knjiga.datumIzdavanja }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Zanr:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.zanr\" value=\"{{ knjiga.zanr[0] }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Kratak opis:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.opis\" value=\"{{ knjiga.opis }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Broj strana:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.brStrana\" value=\"{{ knjiga.brStrana }}\">\r\n    </mat-form-field>\r\n\r\n    <button mat-raised-button (click)=\"dodajKnjigu()\">Dodaj knjigu</button>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>admin works!</p>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core'\r\nimport { Knjiga } from 'src/app/modules/Knjiga'\r\nimport { CommentService } from 'src/app/services/comment.service'\r\nimport { Komentar } from 'src/app/modules/Komentar'\r\nimport { Korisnik } from 'src/app/modules/Korisnik'\r\nimport { DataService } from 'src/app/services/data.service'\r\nimport { BookService } from 'src/app/services/book.service'\r\nimport { UserService } from 'src/app/services/user.service'\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-book',\r\n  templateUrl: './book.component.html',\r\n  styleUrls: ['./book.component.css']\r\n})\r\nexport class BookComponent implements OnInit {\r\n  @Input() ucitanaKnjiga: Knjiga;\r\n\r\n  komentari: Array<Komentar>\r\n  commentsTableColumns: string[]\r\n  ulogovaniKorisnik: Korisnik\r\n\r\n  procitao: boolean\r\n  citam: boolean\r\n  zaCitanje: boolean\r\n  showTable: boolean\r\n\r\n  ocena: number\r\n  komentar: string\r\n\r\n  isReadingBookInfo: Array<number> // [bookId, progressValue, isReading]\r\n\r\n  constructor(private commentService: CommentService, private data: DataService, private userService: UserService) {\r\n    this.commentsTableColumns = ['korisnikId', 'ocena', 'komentar']\r\n    this.isReadingBookInfo = [0, 0, 0]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.ulogovaniKorisnik = this.userService.nadjiKorisnikaId(this.data.dohvatiKorisnika().id)\r\n    if (this.ulogovaniKorisnik == undefined)\r\n      this.ulogovaniKorisnik = this.data.dohvatiKorisnika()\r\n\r\n    this.data.loadedBook.subscribe(book => this.ucitanaKnjiga = book)\r\n    console.log(this.userService.nadjiKorisnikaId(this.data.dohvatiKorisnika().id))\r\n    this.prikaziKjigu()\r\n  }\r\n\r\n  // Loads data to display on view\r\n  prikaziKjigu(): void {\r\n    this.loadToggles()\r\n    this.loadComments()\r\n    this.loadUserComment()\r\n  }\r\n\r\n  // load toggles\r\n  loadToggles() {\r\n    this.procitao = this.ulogovaniKorisnik.procitaneKnjige.includes(this.ucitanaKnjiga.id)\r\n    this.citam = false\r\n    var loaded = false\r\n    this.ulogovaniKorisnik.citamKnjige.forEach(element => {\r\n      if (element[0] == this.ucitanaKnjiga.id) {\r\n        this.isReadingBookInfo = element\r\n        loaded = true\r\n      }\r\n    });\r\n    if (!loaded)\r\n      this.isReadingBookInfo = [this.ucitanaKnjiga.id, 0, 0]\r\n    this.zaCitanje = this.ulogovaniKorisnik.zaCitanjeKnjige.includes(this.ucitanaKnjiga.id)\r\n  }\r\n\r\n  // load comments for currently loaded book\r\n  loadComments() {\r\n    this.komentari = this.commentService.nadjiKnjigaKomentare(this.ucitanaKnjiga)\r\n    if (this.komentari.length != 0)\r\n      this.showTable = true\r\n    else this.showTable = false\r\n  }\r\n\r\n  // load user comment into input fields\r\n  loadUserComment() {\r\n    if (this.commentService.nadjiKomentar(this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id) != null) {\r\n      this.komentar = this.commentService.nadjiKomentar(this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id).komentar\r\n      this.ocena = this.commentService.nadjiKomentar(this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id).ocena\r\n    }\r\n    else {\r\n      this.komentar = \"\"\r\n      this.ocena = 0\r\n    }\r\n  }\r\n\r\n  // Saves freshly edited/added comment\r\n  saveUserComment(): void {\r\n    if (this.commentService.nadjiKomentar(this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id) != null)\r\n      this.commentService.izmeniKomentar(this.komentar, this.ocena, this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id)\r\n    else \r\n      this.commentService.dodajKomentar(this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id, this.ocena, this.komentar)\r\n    this.loadComments()\r\n  }\r\n\r\n  // Returns all names based on param id\r\n  nadjiKorisnika(id: number): string {\r\n    return this.userService.nadjiKorisnikaId(id).korisnickoIme\r\n  }\r\n\r\n  // Sends username of the users profile to be displayed\r\n  otvoriKorisnika(requestedUser: string): void {\r\n    this.data.changeRequestedUser(requestedUser)\r\n    this.data.changeTab(2)\r\n  }\r\n\r\n  // triggers on progressValueChange\r\n  progressUpdated(): void {\r\n    this.toggledCita(this.isReadingBookInfo[2], true)\r\n  }\r\n\r\n  toggledCita(event, save:boolean): void {\r\n    this.isReadingBookInfo[2] = event ? 1 : 0\r\n    if (event) {\r\n      this.citam = true\r\n      this.zaCitanje = false\r\n      this.toggledZaCitanje(false)\r\n    }\r\n\r\n    // update cita array\r\n    var match = false\r\n    if (this.ulogovaniKorisnik.citamKnjige.length > 0)\r\n      this.ulogovaniKorisnik.citamKnjige.forEach(element => {\r\n        if (element[0] == this.ucitanaKnjiga.id) {\r\n          match = true\r\n          element = this.isReadingBookInfo\r\n        }\r\n      });\r\n    if (!match)\r\n      this.ulogovaniKorisnik.citamKnjige.push(this.isReadingBookInfo)\r\n\r\n      if (save) this.saveChanges()\r\n  }\r\n\r\n  toggledZaCitanje(save: boolean): void {\r\n    // update zaCitanje array\r\n    var match = false\r\n    if (this.ulogovaniKorisnik.zaCitanjeKnjige.length > 0)\r\n      this.ulogovaniKorisnik.zaCitanjeKnjige.forEach(element => {\r\n        if (element == this.ucitanaKnjiga.id) {\r\n          match = true\r\n          if (!this.zaCitanje)\r\n            this.ulogovaniKorisnik.zaCitanjeKnjige.splice(this.ulogovaniKorisnik.zaCitanjeKnjige.indexOf(element), 1)\r\n        }\r\n      })\r\n    if (!match)\r\n      this.ulogovaniKorisnik.zaCitanjeKnjige.push(this.ucitanaKnjiga.id)\r\n\r\n    if (save) this.saveChanges()\r\n  }\r\n\r\n  toggledProcitao(): void {\r\n    this.isReadingBookInfo[1] = this.ucitanaKnjiga.brStrana\r\n    this.toggledCita(false, false)\r\n    if (this.procitao)\r\n      this.citam = true\r\n    this.zaCitanje = false\r\n    this.toggledZaCitanje(false)\r\n\r\n\r\n    // update procitao array\r\n    var match = false\r\n    if (this.ulogovaniKorisnik.procitaneKnjige.length > 0)\r\n      this.ulogovaniKorisnik.procitaneKnjige.forEach(element => {\r\n        if (element == this.ucitanaKnjiga.id)\r\n          match = true\r\n      })\r\n    if (!match) {\r\n      this.ulogovaniKorisnik.procitaneKnjige.push(this.ucitanaKnjiga.id)\r\n    }\r\n\r\n    this.saveChanges()\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.userService.sacuvajKorisnika(this.ulogovaniKorisnik)\r\n    console.log(this.ulogovaniKorisnik)\r\n  }\r\n\r\n}\r\n","<br>\r\n<mat-card class=\"mat-elevation-z8\">\r\n    <img src=\"https://bit.ly/2G5Fz3u\" alt=\"ninja\" width=\"178\" height=\"100\"><br>\r\n\r\n    <h3><b>{{ ucitanaKnjiga.naziv }}</b></h3>\r\n    <div *ngIf=\"ulogovaniKorisnik.AT>0 && ucitanaKnjiga.odobrena\">\r\n        <mat-slide-toggle [(ngModel)]=\"procitao\" (ngModelChange)=\"toggledProcitao()\" [disabled]=\"procitao\">Procitao</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"isReadingBookInfo[2]\" (ngModelChange)=\"toggledCita($event, true)\" [disabled]=\"procitao\">Trenutno citam</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"zaCitanje\" (ngModelChange)=\"toggledZaCitanje(true)\" [disabled]=\"citam\">Procitacu je</mat-slide-toggle>\r\n    </div>\r\n    <div *ngIf=\"isReadingBookInfo[2] && ucitanaKnjiga.odobrena\">\r\n        <br>\r\n        <mat-progress-bar mode=\"determinate\" [value]=\"isReadingBookInfo[1]/ucitanaKnjiga.brStrana*100\"></mat-progress-bar>\r\n        <input matInput type=\"number\" appearance=\"textfield\" [(ngModel)]=\"isReadingBookInfo[1]\" (ngModelChange)=\"progressUpdated()\" value=\"{{ isReadingBookInfo[1] }}\">\r\n        <label>od ukupno {{ ucitanaKnjiga.brStrana }} strana</label>\r\n        <br>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n\r\n    <label><b>Autor:</b></label>\r\n    <label class=\"customLabel\" *ngFor=\"let string of ucitanaKnjiga.autor\">{{ string }}</label>\r\n    <mat-divider></mat-divider><br>\r\n\r\n    <label><b>Datum izdavanja:</b></label>\r\n    <label class=\"customLabel\">{{ ucitanaKnjiga.datumIzdavanja }}</label>\r\n    <mat-divider></mat-divider><br>\r\n\r\n    <label><b>Zanr:</b></label>\r\n    <label class=\"customLabel\" *ngFor=\"let string of ucitanaKnjiga.zanr\">{{ string }}</label>\r\n    <mat-divider></mat-divider><br>\r\n\r\n    <label><b>Rezime:</b></label>\r\n    <label class=\"customLabel\">{{ ucitanaKnjiga.opis }}</label>\r\n    <mat-divider></mat-divider><br>\r\n\r\n    <label><b>Ocena:</b></label>\r\n    <label class=\"customLabel\">{{ ucitanaKnjiga.prosecnaOcena }}</label>\r\n    <mat-divider></mat-divider><br>\r\n\r\n    <table mat-table *ngIf=\"showTable\" [dataSource]='komentari' class=\"specialTable\">\r\n\r\n        <ng-container matColumnDef=\"korisnikId\">\r\n            <th mat-header-cell *matHeaderCellDef> Korisnik: </th>\r\n            <td mat-cell *matCellDef=\"let Komentar\">\r\n                <a *ngIf=\"ulogovaniKorisnik.AT!=0\" [routerLink]=\"\" (click)='otvoriKorisnika(nadjiKorisnika(Komentar.korisnikId))'>{{ nadjiKorisnika(Komentar.korisnikId) }}</a>\r\n                <Label *ngIf=\"ulogovaniKorisnik.AT==0\">Anonymous</Label>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"ocena\">\r\n            <th mat-header-cell *matHeaderCellDef> Ocena: </th>\r\n            <td mat-cell *matCellDef=\"let Komentar\"> {{ Komentar.ocena }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"komentar\">\r\n            <th mat-header-cell *matHeaderCellDef> Komentar: </th>\r\n            <td mat-cell *matCellDef=\"let Komentar\"> {{ Komentar.komentar }}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"commentsTableColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: commentsTableColumns;\"></tr>\r\n    </table>\r\n\r\n    <div *ngIf=\"isReadingBookInfo[1]/ucitanaKnjiga.brStrana*100 > 50 && ucitanaKnjiga.odobrena && ulogovaniKorisnik.AT!=0\">\r\n        <br>\r\n        <mat-divider></mat-divider>\r\n        <h3><b>Ostavi komentar:</b></h3>\r\n        <mat-form-field appearance=\"legacy\">\r\n            <mat-label>ocena:</mat-label>\r\n            <input matInput type=\"number\" appereance=\"textfield\" [(ngModel)]=\"ocena\" value=\"{{ ocena }}\">\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"legacy\" class=\"customInput\">\r\n            <mat-label>Komentar:</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"komentar\" value=\"{{ komentar }}\">\r\n        </mat-form-field>\r\n        <button mat-raised-button (click)=\"saveUserComment()\">SACUVAJ</button>\r\n        <br>\r\n    </div>\r\n</mat-card>","import { Component, OnInit, ViewChild, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { Location } from '@angular/common'\r\nimport { BookService } from 'src/app/services/book.service';\r\nimport { BookComponent } from '../book/book.component';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Knjiga } from 'src/app/modules/Knjiga';\r\nimport { Table } from 'src/app/modules/Table';\r\n\r\n@Component({\r\n  selector: 'app-books-page',\r\n  templateUrl: './books-page.component.html',\r\n  styleUrls: ['./books-page.component.css']\r\n})\r\n\r\nexport class BooksPageComponent implements OnInit, OnDestroy {\r\n  @ViewChild(BookComponent) bookChild: BookComponent\r\n\r\n  requestedBook: string\r\n  ucitanaKnjiga: Knjiga\r\n\r\n  AT: number\r\n  showBook: boolean\r\n  showAddBook: boolean\r\n\r\n  showBooksTableParams: Table\r\n  showBooksTable: boolean\r\n\r\n  constructor(private location: Location, private bookService: BookService, private data: DataService) {\r\n    this.showBook = false\r\n    this.showAddBook = false\r\n  }\r\n\r\n  // Ova implementacija radi za dugme, i to radi odlicno! Jedino ima problem kod search param choice\r\n  ngOnInit(): void {\r\n    this.showBooksTableParams = {\r\n      searchObject: \"knjiga\", \r\n      searchParams: [\"naziv\", \"autor\", \"zanr\", \"button\"], \r\n      linkParam: \"naziv\", \r\n      tableData: [],\r\n      headerMap: { \r\n        naziv: \"Naziv\",\r\n        autor: \"Autor\",\r\n        zanr: \"Zanr\",\r\n        button: \"\"\r\n      },\r\n      buttonLabel: \"Odobri\"\r\n    }\r\n    this.data.tableData.subscribe(tableData => this.showBooksTableParams.tableData = tableData)\r\n    this.data.setShowTable(false)\r\n    this.data.showTable.subscribe(showTable => this.showBooksTable = showTable)\r\n    \r\n    this.data.requestedBook.subscribe(requestedBook => this.requestedBook = requestedBook)\r\n    this.data.loggedUserAT.subscribe(AT => this.AT = AT)\r\n    if (this.requestedBook != \"\")\r\n      this.openBook()\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.data.changeRequestedBook(\"\")\r\n    this.data.setTableData([])\r\n  }\r\n\r\n  openBook(): void {\r\n    this.data.setLoadedBook(this.bookService.nadjiKnjiguNaziv(this.requestedBook))\r\n    this.showBook = true\r\n    this.showAddBook = false\r\n    if (this.bookChild)\r\n      this.bookChild.prikaziKjigu()\r\n  }\r\n\r\n  openAddBook(show:boolean) {\r\n    this.showAddBook = show\r\n  }\r\n\r\n  dodajKnjige() {\r\n    console.log(\"Dodaj knjige\")\r\n  }\r\n\r\n  odobriKnjige() {\r\n    // ovde stavi da kad klikne izadje tabela sa svim neodobrenim knjigama!\r\n    console.log(\"Odobri knjige\")\r\n  }\r\n  \r\n}\r\n","<div class=\"content\">\r\n  <br *ngIf=\"AT==2\">\r\n  <button class=\"asd\" mat-raised-button *ngIf=\"AT==2\" (click)=\"dodajKnjige()\">Dodaj knjige</button>\r\n  <button class=\"asd\" mat-raised-button *ngIf=\"AT==2\" (click)=\"odobriKnjige()\">Odobri knjige</button>\r\n  <br *ngIf=\"AT==2\">\r\n  <app-search [searchParams]=\"showBooksTableParams\" (showAddOption)=\"showAddBook=$event\"></app-search>\r\n  <app-table *ngIf=\"showBooksTable\" [tableParams]=\"showBooksTableParams\" (linkClick)=\"openBook()\"></app-table>\r\n  <app-book *ngIf=\"showBook\"></app-book>\r\n  <app-add-book *ngIf=\"showAddBook && AT!=0\"></app-add-book>\r\n  <br>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  email:string\r\n  emailAuthenticated:boolean\r\n  novaLozinka:string\r\n  novaLozinka2:string\r\n\r\n  constructor(private router:Router) {\r\n    this.emailAuthenticated = false\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendEmail():void {\r\n    this.emailAuthenticated = true\r\n  }\r\n\r\n  changePassword():void {\r\n    this.back()\r\n  }\r\n\r\n  back():void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <br>\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-form-field appearance=\"legacy\">\r\n            <mat-label>email:</mat-label>\r\n            <input matInput [(ngModel)]=\"email\" required [disabled]=\"emailAuthenticated\">\r\n            <mat-hint align=\"start\">Unesite Vasu email adresu:</mat-hint>\r\n        </mat-form-field>\r\n        <br> <br>\r\n        <button mat-raised-button *ngIf=\"!emailAuthenticated\" (click)=\"sendEmail()\">Posalji zahtev za promenu lozinke</button>\r\n\r\n        <div *ngIf=\"emailAuthenticated\">\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Lozinka:</mat-label>\r\n                <input matInput type=\"password\" [(ngModel)]=\"novaLozinka\" required>\r\n                <mat-hint align=\"start\">Unesite <b>novu</b> lozinku:</mat-hint>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Lozinka:</mat-label>\r\n                <input matInput type=\"password\" [(ngModel)]=\"novaLozinka2\" required>\r\n                <mat-hint align=\"start\">Unesite <b>ponovo novu</b> lozinku:</mat-hint>\r\n            </mat-form-field>\r\n            <br>\r\n            <button mat-raised-button (click)=\"changePassword()\">Sacuvaj novu lozinku</button>\r\n        </div> \r\n        <br><br>\r\n        <button mat-raised-button (click)=\"back()\">Nazad</button>\r\n    </mat-card>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { Table } from '../../modules/Table'\r\n\r\n@Component({\r\n  selector: 'app-events-page',\r\n  templateUrl: './events-page.component.html',\r\n  styleUrls: ['./events-page.component.css']\r\n})\r\nexport class EventsPageComponent implements OnInit, OnDestroy {\r\n  showEventsTableParams: Table\r\n\r\n  constructor(private data: DataService, private eventService: EventService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.showEventsTableParams = {\r\n      searchObject: \"desavanje\",\r\n      searchParams: [\"naziv\", \"aktivno\"],\r\n      linkParam: \"naziv\",\r\n      tableData: this.eventService.getAllEvents(),\r\n      headerMap: {\r\n        naziv: \"Naziv\",\r\n        aktivno: \"Status\"\r\n      },\r\n      buttonLabel: \"\"\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //this.data.setShowTable(false)\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <app-table [tableParams]=\"showEventsTableParams\"></app-table>\r\n    <br>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  selectedTab = new FormControl(0);\r\n  logButton: string\r\n\r\n  searchTypes: Array<string>\r\n\r\n  AT:number\r\n\r\n  constructor(private router: Router, private data: DataService) {\r\n    /* \r\n     * Ovo stoji da bi se na reload postavio onaj korisnik koji je zapravo ulogovan\r\n     * moze i bez toga ali onda svaki refresh zapravo odradi logout, kasnije proveriti\r\n     * u zavisnosti sta si napravio za validaciju i autentifikaciju trenutno \r\n     * ulogovanog korisnika i shodno tome promeni logiku ovoga\r\n     */\r\n    this.data.setLoggedUserAT(this.data.dohvatiKorisnika().AT)\r\n    this.data.selectedTab.subscribe(selectedTab => this.selectedTab.setValue(selectedTab))\r\n    this.data.loggedUserAT.subscribe(AT => this.AT = AT)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setTabs()\r\n  }\r\n\r\n  logOut(): void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  goToProfileTab() {\r\n    this.selectedTab.setValue(2)\r\n  }\r\n\r\n  goToBookTab() {\r\n    this.selectedTab.setValue(0)\r\n  }\r\n\r\n  // To be called on init \r\n  // Setting up tabs in main/home menu\r\n  setTabs(): void {\r\n    this.selectedTab.setValue(2)\r\n    if (this.AT == 0) {\r\n      this.logButton = 'Log In'\r\n      this.selectedTab.setValue(0)\r\n    }\r\n    else {\r\n      this.logButton = 'Log Out'\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\" [selectedIndex]=\"selectedTab.value\"\r\n    (selectedIndexChange)=\"selectedTab.setValue($event)\">\r\n    <mat-tab label=\"Knjige\">\r\n        <app-books-page *ngIf=\"selectedTab.value == 0\"></app-books-page>\r\n    </mat-tab>\r\n    <mat-tab label=\"Desavanja\">\r\n        <app-events-page *ngIf=\"selectedTab.value == 1\"></app-events-page>\r\n    </mat-tab>\r\n    <mat-tab *ngIf=\"AT\" label=\"Profil\">\r\n        <app-profiles-page *ngIf=\"selectedTab.value == 2\"></app-profiles-page>\r\n    </mat-tab>\r\n    <mat-tab>\r\n        <ng-template mat-tab-label>\r\n            <span (click)='logOut()'>{{ logButton }}</span>\r\n        </ng-template>\r\n    </mat-tab>\r\n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { ValidatorService } from 'src/app/services/validator.service'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username:string\r\n  password:string\r\n\r\n  constructor(private router:Router, private userService:UserService, private data:DataService,\r\n    private validatorService: ValidatorService) { \r\n    this.username = ''\r\n    this.password = ''\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.data.postaviKorisnika({\r\n      id: 0,\r\n      AT: 0,\r\n      ime: '',\r\n      prezime:' ',\r\n      slika: '',\r\n      korisnickoIme: '',\r\n      lozinka: '',\r\n      datumRodjenja: '',\r\n      grad: '',\r\n      drzava: '',\r\n      email: '', \r\n      procitaneKnjige: [],\r\n      citamKnjige: [],\r\n      zaCitanjeKnjige: []\r\n    });\r\n  }\r\n  \r\n  login():void {\r\n    var userFound:boolean = false\r\n    if (this.validatorService.validateUsername(this.username) && this.validatorService.validatePassword(this.password) ) {\r\n      userFound = this.userService.korisnikLogIn(this.username, this.password)\r\n    }\r\n    \r\n    if (userFound) {\r\n      this.router.navigate(['/home'])\r\n    }\r\n    console.log('login button clicked');\r\n  }\r\n\r\n  changePassword():void {\r\n    this.router.navigate(['/change/password']);\r\n  }\r\n\r\n  register():void {\r\n    this.router.navigate(['/register']);\r\n    console.log('register button clicked');\r\n  }\r\n\r\n  guest():void {\r\n    this.router.navigate(['/home']);\r\n    console.log('guest entry');\r\n  }\r\n}\r\n","<div id=\"mainContent\">\r\n  <div class=\"content\">\r\n    <br>\r\n    <mat-card class=\"mat-elevation-z8\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Korisnicko Ime:</mat-label>\r\n        <input matInput [(ngModel)]=\"username\" required (keydown.enter)=\"login()\">\r\n      </mat-form-field>\r\n      <br>\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Lozinka:</mat-label>\r\n        <input matInput [(ngModel)]=\"password\" type=\"password\" required (keydown.enter)=\"login()\">\r\n      </mat-form-field><br>\r\n\r\n      <a mat-button (click)=\"changePassword()\" target=\"\">Zaboravio sam lozinku!</a><br>\r\n      <button mat-raised-button (click)=\"login()\">Prijavljivanje</button><br>\r\n      <button mat-raised-button (click)=\"register()\">Registracija</button><br>\r\n      <button mat-raised-button (click)=\"guest()\">Nastavi kao gost</button><br>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Korisnik } from 'src/app/modules/Korisnik';\r\nimport { BookService } from 'src/app/services/book.service';\r\nimport { CommentService } from 'src/app/services/comment.service';\r\nimport { Komentar } from 'src/app/modules/Komentar';\r\nimport { Knjiga } from 'src/app/modules/Knjiga';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  @Input() korisnik: Korisnik\r\n\r\n  editDisabled: boolean\r\n  commentsTableColumns: string[]\r\n  booksTableReadColumns: string[]\r\n  booksTableReadingColumns: string[]\r\n  booksTableToReadColumns: string[]\r\n\r\n  askedBook: string\r\n  editButtonLabel: string\r\n\r\n  // Variables for listing out books under (read, reading, to be read) tables\r\n  tableDataArray: Array<Array<any>>\r\n  tableSizeOptions: Array<number>\r\n  tableSizeInitial: number\r\n  tableMaxLength: number\r\n\r\n  constructor(private userService: UserService, private data: DataService, private bookService: BookService, private commentService: CommentService) {\r\n    this.editButtonLabel = \"Promeni podatke\"\r\n    this.editDisabled = true\r\n    this.commentsTableColumns = ['knjigaId', 'komentar', 'ocena', 'zanr']\r\n    this.booksTableReadColumns = ['procitaneKnjige']\r\n    this.booksTableReadingColumns = ['citamKnjige']\r\n    this.booksTableToReadColumns = ['zaCitanjeKnjige']\r\n    this.tableSizeInitial = 5\r\n    this.tableSizeOptions = [1, 5, 15, 50]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.data.loadedUser.subscribe(user => this.korisnik = user)\r\n    this.prikaziKorisnika()\r\n  }\r\n\r\n  prikaziKorisnika(): void {\r\n    this.tableDataArray = [this.korisnik.procitaneKnjige, this.korisnik.citamKnjige, this.korisnik.zaCitanjeKnjige]\r\n    this.tableDataArray[1] = this.tableDataArray[1].filter(element => element[2] == 1)\r\n\r\n    this.tableMaxLength = 0\r\n    this.tableDataArray.forEach(element => {\r\n      if (element.length > this.tableMaxLength)\r\n        this.tableMaxLength = element.length\r\n    });\r\n  }\r\n\r\n  // Method to unlock/lock input fields for user params\r\n  promeniPodatke(): void {\r\n    this.editDisabled = !this.editDisabled\r\n    if (this.editDisabled) \r\n      this.editButtonLabel = \"Promeni podatke\"\r\n    else \r\n      this.editButtonLabel = \"Sacuvaj podatke\"\r\n  }\r\n\r\n  //\r\n  pokupiKomentare(): Komentar[] {\r\n    return this.commentService.nadjiKorisnikKomentare(this.korisnik)\r\n  }\r\n\r\n  //\r\n  pokupiKnjigu(id: number): Knjiga {\r\n    return this.bookService.nadjiKnjiguId(id)\r\n  }\r\n\r\n  // Method of authentification used to change value on field which controls display of \"EDIT\" button\r\n  authenticateUser(): boolean {\r\n    var ulogovaniKorisnik = this.data.dohvatiKorisnika()\r\n    if (this.korisnik.id == ulogovaniKorisnik.id)\r\n      return true\r\n    else return false\r\n  }\r\n\r\n  // Method to be called upon clicking on book name link\r\n  otvoriKnjigu(requestedBook: string): void {\r\n    this.data.changeRequestedBook(requestedBook)\r\n    this.data.changeTab(0)\r\n  }\r\n\r\n  // Method of pagination event change used to update shown data in table\r\n  onPageChanged(e) {\r\n    let firstCut = e.pageIndex * e.pageSize;\r\n    let secondCut = firstCut + e.pageSize;\r\n    this.tableDataArray[0] = this.korisnik.procitaneKnjige.slice(firstCut, secondCut);\r\n    this.tableDataArray[1] = this.korisnik.citamKnjige.slice(firstCut, secondCut);\r\n    this.tableDataArray[2] = this.korisnik.zaCitanjeKnjige.slice(firstCut, secondCut);\r\n  }\r\n\r\n}\r\n","<br>\r\n<div>\r\n  \r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <img src=\"https://bit.ly/2G5Fz3u\" alt=\"ninja\" width=\"178\" height=\"100\"><br>\r\n    <h3>{{ korisnik.korisnickoIme }}</h3>\r\n  </mat-card>\r\n  <br>\r\n\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <mat-form-field appearance=\"legacy\">\r\n      <mat-label>Ime:</mat-label>\r\n      <input matInput [(ngModel)]=\"korisnik.ime\" value=\"{{ korisnik.ime }}\"\r\n        disabled=\"{{ editDisabled }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n      <mat-label>Prezime:</mat-label>\r\n      <input matInput [(ngModel)]=\"korisnik.prezime\" value=\"{{ korisnik.prezime }}\"\r\n        disabled=\"{{ editDisabled }}\">\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n      <mat-label>Datum Rodjenja:</mat-label>\r\n      <input matInput [(ngModel)]=\"korisnik.datumRodjenja\" value=\"{{ korisnik.datumRodjenja }}\"\r\n        disabled=\"{{ editDisabled }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n      <mat-label>Grad:</mat-label>\r\n      <input matInput [(ngModel)]=\"korisnik.grad\" value=\"{{ korisnik.grad }}\"\r\n        disabled=\"{{ editDisabled }}\">\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n      <mat-label>email:</mat-label>\r\n      <input matInput [(ngModel)]=\"korisnik.email\" value=\"{{ korisnik.email }}\"\r\n        disabled=\"{{ editDisabled }}\">\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <label>Last Active: OVDE DODAJ KADA JE POSLEDNJI PUT BIO LIVE</label><br>\r\n    <label>Online: </label><span class=\"onlineIndicator\"></span><br>\r\n    <button mt-raised-button *ngIf=\"authenticateUser()\" (click)='promeniPodatke()'>{{ editButtonLabel }}</button>\r\n  </mat-card>\r\n  <br>\r\n\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]='tableDataArray[0]' class=\"specialTable\">\r\n\r\n      <ng-container matColumnDef=\"procitaneKnjige\">\r\n        <th mat-header-cell *matHeaderCellDef> Procitane knjige: </th>\r\n        <td mat-cell *matCellDef=\"let number\">\r\n          <a [routerLink]=\"\" (click)='otvoriKnjigu(pokupiKnjigu(number).naziv)'>{{ pokupiKnjigu(number).naziv }}</a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"booksTableReadColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: booksTableReadColumns;\"></tr>\r\n    </table>\r\n\r\n    <table mat-table [dataSource]='tableDataArray[1]' class=\"specialTable\">\r\n\r\n      <ng-container matColumnDef=\"citamKnjige\">\r\n        <th mat-header-cell *matHeaderCellDef> Trenutno se citaju: </th>\r\n        <td mat-cell *matCellDef=\"let array\">\r\n          <a [routerLink]=\"\" (click)='otvoriKnjigu(pokupiKnjigu(array[0]).naziv)'>{{ pokupiKnjigu(array[0]).naziv }}</a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"booksTableReadingColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: booksTableReadingColumns;\"></tr>\r\n    </table>\r\n\r\n    <table mat-table [dataSource]='tableDataArray[2]' class=\"specialTable\">\r\n\r\n      <ng-container matColumnDef=\"zaCitanjeKnjige\">\r\n        <th mat-header-cell *matHeaderCellDef> Za citanje: </th>\r\n        <td mat-cell *matCellDef=\"let number\">\r\n          <a [routerLink]=\"\" (click)='otvoriKnjigu(pokupiKnjigu(number).naziv)'>{{ pokupiKnjigu(number).naziv }}</a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"booksTableToReadColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: booksTableToReadColumns;\"></tr>\r\n    </table>\r\n\r\n    <mat-paginator [length]=\"tableMaxLength\" [pageSize]=\"tableSizeInitial\" [pageSizeOptions]=\"tableSizeOptions\" (page)=\"onPageChanged($event)\">\r\n    </mat-paginator>\r\n  </mat-card>\r\n  <br>\r\n\r\n\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]='pokupiKomentare()' class=\"specialTable\">\r\n\r\n      <ng-container matColumnDef=\"knjigaId\">\r\n        <th mat-header-cell *matHeaderCellDef> Knjiga: </th>\r\n        <td mat-cell *matCellDef=\"let Komentar\">\r\n          <a [routerLink]=\"\" (click)='otvoriKnjigu(pokupiKnjigu(Komentar.knjigaId).naziv)'>{{ pokupiKnjigu(Komentar.knjigaId).naziv }}</a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"komentar\">\r\n        <th mat-header-cell *matHeaderCellDef> Komentar: </th>\r\n        <td mat-cell *matCellDef=\"let Komentar\"> {{ Komentar.komentar }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"ocena\">\r\n        <th mat-header-cell *matHeaderCellDef> Ocena: </th>\r\n        <td mat-cell *matCellDef=\"let Komentar\"> {{ Komentar.ocena }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"zanr\">\r\n        <th mat-header-cell *matHeaderCellDef> Zanr: </th>\r\n        <td mat-cell *matCellDef=\"let Komentar\"> {{ pokupiKnjigu(Komentar.knjigaId).zanr }}</td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"commentsTableColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: commentsTableColumns;\"></tr>\r\n    </table>\r\n  </mat-card>\r\n  <br>\r\n</div>","<div class=\"content\">\r\n    <app-search [searchParams]=\"showUserTableParams\"></app-search>\r\n    <app-table *ngIf=\"showUserTable\" [tableParams]=\"showUserTableParams\" (linkClick)=\"openProfile()\"></app-table>\r\n    <app-profile *ngIf=\"showUser\"></app-profile>\r\n    <br>\r\n</div>","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { Korisnik } from 'src/app/modules/Korisnik';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ProfileComponent } from '../profile/profile.component';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Table } from 'src/app/modules/Table';\r\n\r\n@Component({\r\n  selector: 'app-profiles-page',\r\n  templateUrl: './profiles-page.component.html',\r\n  styleUrls: ['./profiles-page.component.css']\r\n})\r\nexport class ProfilesPageComponent implements OnInit, OnDestroy {\r\n  @ViewChild(ProfileComponent) profileChild: ProfileComponent\r\n\r\n  requestedUser: string\r\n\r\n  showUserTableParams: Table\r\n  showUserTable: boolean\r\n  showUser: Boolean\r\n\r\n  constructor(private userService: UserService, private data: DataService) {\r\n    this.showUser = true\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showUserTableParams = {\r\n      searchObject: \"profil\",\r\n      searchParams: [\"ime\", \"prezime\", \"korisnickoIme\"],\r\n      linkParam: \"korisnickoIme\",\r\n      tableData: [],\r\n      headerMap: {\r\n        ime: \"Ime\",\r\n        prezime: \"Prezime\",\r\n        korisnickoIme: \"Korisnicko Ime\"\r\n      },\r\n      buttonLabel: \"\"\r\n    }\r\n    this.data.tableData.subscribe(tableData => this.showUserTableParams.tableData = tableData)\r\n    this.data.setShowTable(false)\r\n    this.data.showTable.subscribe(showTable => this.showUserTable = showTable)\r\n\r\n    this.data.requestedUser.subscribe(requestedUser => this.requestedUser = requestedUser)\r\n    if (this.requestedUser != \"\")\r\n      this.openProfile()\r\n    else\r\n      this.data.setLoadedUser(this.userService.nadjiKorisnikaId(this.data.dohvatiKorisnika().id))\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.data.changeRequestedUser(\"\")\r\n    this.data.setTableData([])\r\n  }\r\n\r\n  async openProfile(): Promise<void> {\r\n    this.data.setLoadedUser(await this.userService.nadjiKorisnikaKorisnickoIme(this.requestedUser))\r\n    this.showUser = true\r\n    if (this.profileChild) {\r\n      this.profileChild.prikaziKorisnika()\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { UserService } from 'src/app/services/user.service'\r\nimport { Korisnik } from 'src/app/modules/Korisnik'\r\nimport { ValidatorService } from 'src/app/services/validator.service'\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  siteKey:string\r\n  captchaCheck:boolean\r\n  korisnik:Korisnik\r\n\r\n  usernameCheck:boolean\r\n  passwordCheck:boolean\r\n  emailCheck:boolean\r\n\r\n\r\n  constructor(private router:Router, private userService:UserService, private validatorService: ValidatorService) {\r\n    this.siteKey = \"6Le2UcUZAAAAAHKv4dh2moTO_XPyNeDIbb4pY7ew\"\r\n    this.captchaCheck = false\r\n    \r\n    this.korisnik = {\r\n      id: 0,\r\n      AT: 1,\r\n      ime: '',\r\n      prezime:' ',\r\n      slika: '',\r\n      korisnickoIme: '',\r\n      lozinka: '',\r\n      datumRodjenja: '',\r\n      grad: '',\r\n      drzava: '',\r\n      email: '',\r\n      procitaneKnjige: [],\r\n      citamKnjige: [],\r\n      zaCitanjeKnjige: []\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  register():void {\r\n    console.log(this.korisnik.datumRodjenja)\r\n    this.usernameCheck = this.validatorService.validateUsername(this.korisnik.korisnickoIme)\r\n    this.passwordCheck = this.validatorService.validatePassword(this.korisnik.lozinka)\r\n    this.emailCheck = this.validatorService.validateEmail(this.korisnik.email)\r\n    \r\n    // Odradi prvo provere sve koje su potrebne nad unetim poljima\r\n    if(this.usernameCheck && this.passwordCheck && this.emailCheck) {\r\n      this.userService.dodajKorisnika(this.korisnik)\r\n      this.router.navigate(['/login'])\r\n    }\r\n  }\r\n\r\n  back():void {\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n}\r\n","<div id=\"mainContent\">\r\n    <div class=\"content\">\r\n        <br>\r\n        <mat-card class=\"mat-elevation-z8\">\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Ime:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.ime\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Prezime:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.prezime\" required>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Korisnicko Ime:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.korisnickoIme\" required>\r\n                <mat-error>Neispravno uneto korisnicko ime</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Lozinka:</mat-label>\r\n                <input matInput type=\"password\" [(ngModel)]=\"korisnik.lozinka\" required>\r\n                <mat-error>Neispravno uneta lozinka</mat-error>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Datum Rodjenja:</mat-label>\r\n                <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"korisnik.datumRodjenja\" required>\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Mesto Prebivanja:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.grad\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Drzava Prebivanja:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.drzava\" required>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>email Adresa:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.email\" required>\r\n                <mat-error>Neispravno unet email</mat-error>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <div class=\"captcha\">\r\n                <ngx-recaptcha2 #captchaElem [siteKey]=\"siteKey\" (success)=\"captchaCheck = true\">\r\n                </ngx-recaptcha2>\r\n            </div>\r\n\r\n            <button mat-raised-button *ngIf=\"captchaCheck\" (click)=\"register()\"> Zavrsi registraciju </button><br>\r\n            <button mat-raised-button (click)=\"back()\">Nazad</button>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Table } from 'src/app/modules/Table';\r\nimport { BookService } from 'src/app/services/book.service';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  @Output() showAddOption = new EventEmitter<any>()\r\n  @Input() searchParams: Table\r\n\r\n  hintParams: Array<string>\r\n\r\n  searchHint: string\r\n  searchResponse: Array<any>\r\n  searchQuery: string\r\n\r\n\r\n  constructor(private userService: UserService, private bookService: BookService, private data: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchHint = this.searchParams.searchParams[0]\r\n    this.hintParams = new Array()\r\n    for (let string of this.searchParams.searchParams) \r\n      this.hintParams.push(string)\r\n    if (this.hintParams[this.hintParams.length - 1] == \"button\")\r\n      this.hintParams.splice(this.hintParams.length - 1, 1)\r\n  }\r\n\r\n  search() {\r\n    switch (this.searchParams.searchObject) {\r\n      case \"knjiga\": this.searchResponse = this.bookService.nadjiKnjigu(this.searchHint, this.searchQuery)\r\n        if (this.searchResponse.length == 0)\r\n          this.showAddOption.emit(true)\r\n        break\r\n      case \"profil\": this.searchResponse = this.userService.nadjiKorisnika(this.searchHint, this.searchQuery)\r\n        break\r\n    }\r\n    \r\n    if (this.searchResponse.length != 0) {\r\n      this.data.setTableData(this.searchResponse)\r\n      this.data.setShowTable(true)\r\n    }\r\n    else {\r\n      this.data.setShowTable(false)\r\n    }\r\n  }\r\n\r\n  searchTypeSelect($event) {\r\n    this.searchHint = $event.value\r\n  }\r\n\r\n  searchResponseData() {\r\n\r\n  }\r\n}\r\n","<br>\r\n<div class=\"content\">\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-form-field appearance=\"legacy\">\r\n            <mat-label>Pretraga</mat-label>\r\n            <input matInput [(ngModel)]=\"searchQuery\" value=\"{{ searchQuery }}\" (keydown.enter)=\"search()\">\r\n            <mat-icon matSuffix>search</mat-icon>\r\n            <mat-hint>pretraga po parametru: {{ searchHint }}</mat-hint>\r\n        </mat-form-field>\r\n        <br><br>\r\n        <mat-radio-group aria-label=\"Select\">\r\n            <mat-radio-button *ngFor=\"let string of hintParams\" [value]=\"string\" (change)=\"searchTypeSelect($event)\"\r\n                [checked]=\"hintParams[0] == string\">{{ string }}</mat-radio-button>\r\n        </mat-radio-group>\r\n    </mat-card>\r\n</div>","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { Table } from 'src/app/modules/Table';\r\nimport { BookService } from 'src/app/services/book.service';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css']\r\n})\r\nexport class TableComponent implements OnInit {\r\n  @Output() linkClick = new EventEmitter()\r\n  @Input() tableParams: Table\r\n  \r\n  AT: number\r\n  tableSizeOptions: Array<number> // Set of options for table size\r\n\r\n  constructor(private data: DataService, private bookService: BookService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tableSizeOptions = [1, 5, 15, 50]\r\n\r\n    this.data.loggedUserAT.subscribe(AT => this.AT = AT)\r\n    this.tableParams.tableData.slice(0, this.tableSizeOptions[1]);\r\n  }\r\n\r\n  // emits that link inside table is clicked\r\n  // parent should open object of the same type parent class is\r\n  openSelected(nesto: string) {\r\n    switch (this.tableParams.searchObject) {\r\n      case \"knjiga\": this.data.changeRequestedBook(nesto)\r\n        break\r\n      case \"profil\": this.data.changeRequestedUser(nesto)\r\n        break\r\n      case \"desavanje\": console.log(\"Desavanje \" + nesto + \" trazeno!\")// smisli\r\n        break\r\n    }\r\n    this.linkClick.emit()\r\n  }\r\n\r\n  buttonClick(obj: any) {\r\n    switch (this.AT) {\r\n      case 2: console.log(\"Moderator click\")\r\n        console.log(obj)\r\n        obj[\"odobrena\"] = true\r\n        if (obj[\"odobrena\"])\r\n          // Sacuvaj knjigu\r\n        break\r\n      case 3: console.log(\"Admin click\")\r\n        console.log(obj)\r\n    }\r\n  }\r\n\r\n  onPageChanged(e) {\r\n    let firstCut = e.pageIndex * e.pageSize;\r\n    let secondCut = firstCut + e.pageSize;\r\n    this.tableParams.tableData.slice(firstCut, secondCut);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <br>\r\n    <mat-card class=\"mat-elevation-z8 specialTable\">\r\n        <table mat-table [dataSource]='tableParams.tableData' class=\"specialTable\">\r\n\r\n            <ng-container *ngFor=\"let string of tableParams.searchParams\" [matColumnDef]=\"string\">\r\n                <th mat-header-cell *matHeaderCellDef> {{ tableParams.headerMap[string] }} </th>\r\n                <td mat-cell *matCellDef=\"let Object\">\r\n                    <a *ngIf=\"string == tableParams.linkParam\" [routerLink]=\"\"\r\n                        (click)='openSelected(Object[string])'>{{ Object[string] }}</a>\r\n                    <Label *ngIf=\"string != tableParams.linkParam && string != 'button'\">{{ Object[string] }}</Label>\r\n                    <Button *ngIf=\"string == 'button' && AT > 1 && Object['odobrena'] == false\"\r\n                        (click)=\"buttonClick(Object)\">{{ tableParams.buttonLabel }}</Button>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"tableParams.searchParams\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: tableParams.searchParams;\"></tr>\r\n        </table>\r\n        <mat-paginator [length]=\"tableParams.tableData.length\" [pageSize]=\"tableSizeOptions[1]\"\r\n            [pageSizeOptions]=\"tableSizeOptions\" (page)=\"onPageChanged($event)\"></mat-paginator>\r\n    </mat-card>\r\n</div>","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appUser]'\r\n})\r\nexport class UserDirective {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Knjiga } from '../modules/Knjiga';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookService {\r\n  knjigeLista: Knjiga[]\r\n\r\n  constructor() {\r\n    this.fillKnjigeLista()\r\n  }\r\n\r\n  // Method to add a book in database\r\n  dodajKnjigu(knjiga: Knjiga): void {\r\n    this.knjigeLista.push(knjiga)\r\n  }\r\n\r\n  // Method to find the book based on param 'id'\r\n  nadjiKnjiguId(id: number): Knjiga {\r\n    var bookFound = this.knjigeLista.filter(x => x.id == id)\r\n    if (bookFound.length > 0) {\r\n      return bookFound[0]\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Method to find the book based on param 'naziv'\r\n  nadjiKnjiguNaziv(naziv: string): Knjiga {\r\n    var bookFound = this.knjigeLista.filter(x => x.naziv == naziv)\r\n    if (bookFound.length > 0) \r\n      return bookFound[0]\r\n    else \r\n      return null\r\n  }\r\n\r\n  // Method returns full list of objects of type 'Knjiga' based on params\r\n  // Returns list of books based on searchQuery where searchQuery matches searchParam.value\r\n  nadjiKnjigu(searchParam: string, searchQuery: string): Array<Knjiga> {\r\n    if (Array.isArray(this.knjigeLista[0][searchParam]))\r\n      return this.knjigeLista.filter(x => x[searchParam].some(element => {\r\n        return (element == searchQuery)\r\n      }))\r\n    else\r\n      return this.knjigeLista.filter(x => x[searchParam] == searchQuery)\r\n  }\r\n\r\n  // Temporary method for testing purposes\r\n  fillKnjigeLista(): void {\r\n    this.knjigeLista = [\r\n      {\r\n        id: 1,\r\n        slika: 'asd',\r\n        naziv: 'Na drini cuprija',\r\n        autor: ['Ivo Andric'],\r\n        datumIzdavanja: '01/03/1945',\r\n        zanr: ['Istorija', 'Fikcija'],\r\n        opis: 'bla bla bla',\r\n        prosecnaOcena: 4.5,\r\n        brStrana: 574,\r\n        odobrena: true\r\n      },\r\n      {\r\n        id: 2,\r\n        slika: 'asd',\r\n        naziv: 'The Revenant',\r\n        autor: ['Leo'],\r\n        datumIzdavanja: '01/03/2015',\r\n        zanr: ['Fantastika'],\r\n        opis: 'blu blu blu',\r\n        prosecnaOcena: 4.2,\r\n        brStrana: 300,\r\n        odobrena: true\r\n      },\r\n      {\r\n        id: 3,\r\n        slika: 'asd',\r\n        naziv: 'What If?',\r\n        autor: ['Neka likusa'],\r\n        datumIzdavanja: '01/03/2020',\r\n        zanr: ['Fantastika'],\r\n        opis: 'ble ble ble',\r\n        prosecnaOcena: 3.2,\r\n        brStrana: 800,\r\n        odobrena: false\r\n      },\r\n      {\r\n        id: 4,\r\n        slika: 'asd',\r\n        naziv: 'Avengers',\r\n        autor: ['MARVEL'],\r\n        datumIzdavanja: '01/03/1998',\r\n        zanr: ['Fantastika', 'Fikcija'],\r\n        opis: 'ble ble ble',\r\n        prosecnaOcena: 4.2,\r\n        brStrana: 50,\r\n        odobrena: true\r\n      }\r\n    ]\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Komentar } from '../modules/Komentar';\r\nimport { DataService } from './data.service';\r\nimport { Korisnik } from '../modules/Korisnik';\r\nimport { Knjiga } from '../modules/Knjiga';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n  komentarLista:Komentar[]\r\n\r\n  constructor(private data:DataService) {\r\n    this.fillKomentariLista()\r\n  }\r\n\r\n  // Method to add a comment in database\r\n  dodajKomentar(korisnikId:number, knjigaId:number, ocena:number, komentar:string):void {\r\n    this.komentarLista.push({\r\n      id: this.komentarLista.length,\r\n      korisnikId: korisnikId,\r\n      knjigaId: knjigaId,\r\n      komentar: komentar,\r\n      ocena: ocena\r\n    })\r\n  }\r\n\r\n  // Method to delete a comment in database\r\n  obrisiKomentar():void {\r\n\r\n  }\r\n\r\n  // Method to edit a comment in database\r\n  izmeniKomentar(komentar:string, ocena:number, korisnikId:number, knjigaId:number):void {\r\n    this.komentarLista.filter(x => x.korisnikId == korisnikId).filter(y => y.knjigaId == knjigaId)[0].komentar = komentar\r\n    this.komentarLista.filter(x => x.korisnikId == korisnikId).filter(y => y.knjigaId == knjigaId)[0].ocena = ocena\r\n  }\r\n\r\n  // Method to find the comment in database based on 'user.id' and 'book.id' params\r\n  nadjiKomentar(korisnikId:number, knjigaId:number):Komentar {\r\n    var pronadjeniKomentari = this.komentarLista.filter(x => x.korisnikId == korisnikId).filter(y => y.knjigaId == knjigaId)\r\n    if (pronadjeniKomentari.length > 0) {\r\n      return pronadjeniKomentari[0]\r\n    }\r\n    else return null\r\n  }\r\n\r\n  // Method returns full list of comments based on 'user.id' param\r\n  nadjiKorisnikKomentare(korisnik:Korisnik):Komentar[] {\r\n    var pronadjeniKomentari = this.komentarLista.filter(x => x.korisnikId == korisnik.id)\r\n    if (pronadjeniKomentari.length > 0) {\r\n      return pronadjeniKomentari\r\n    }\r\n    else return []\r\n  }\r\n\r\n  // Method returns full list of comments based on 'book' param\r\n  nadjiKnjigaKomentare(knjiga:Knjiga):Komentar[] {\r\n    var pronadjeniKomentari = this.komentarLista.filter(x => x.knjigaId == knjiga.id)\r\n    if (pronadjeniKomentari.length > 0) {\r\n      return pronadjeniKomentari\r\n    }\r\n    else return []\r\n  }\r\n\r\n  // Temporary method for testing purposes\r\n  fillKomentariLista():void {\r\n    this.komentarLista = [\r\n      {\r\n        id: 1,\r\n        korisnikId: 1,\r\n        knjigaId: 1,\r\n        komentar: 'Evo meni se ova knjiga nije svidela.',\r\n        ocena: 2\r\n      },\r\n      {\r\n        id: 2,\r\n        korisnikId: 2,\r\n        knjigaId: 1,\r\n        komentar: 'Glamorous AF',\r\n        ocena: 4.5\r\n      },\r\n      {\r\n        id: 3,\r\n        korisnikId: 2,\r\n        knjigaId: 2,\r\n        komentar: 'Did not understant a single word, except \"SEX\".',\r\n        ocena: 5\r\n      },\r\n    ]\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Korisnik } from '../modules/Korisnik';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Knjiga } from '../modules/Knjiga';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  // Holds the authority token of logged user\r\n  private loggedUserATSource = new BehaviorSubject(0)\r\n  loggedUserAT = this.loggedUserATSource.asObservable()\r\n\r\n  // Holds the data of requested user after clicking the link to the user\r\n  private requestedUserSource = new BehaviorSubject('')\r\n  requestedUser = this.requestedUserSource.asObservable()\r\n\r\n  // Holds the currently loaded(to be displayed) book\r\n  private loadedBookSource = new BehaviorSubject<Knjiga>({\r\n    id: 0,\r\n    slika: '',\r\n    naziv: '',\r\n    autor: [],\r\n    datumIzdavanja: '',\r\n    zanr: [],\r\n    opis: '',\r\n    prosecnaOcena: 0,\r\n    brStrana: 0,\r\n    odobrena: false\r\n  })\r\n  loadedBook = this.loadedBookSource.asObservable()\r\n\r\n  // Holds the currently loaded(to be displayed) user\r\n  private loadedUserSource = new BehaviorSubject<Korisnik>({\r\n    id: 0,\r\n    AT: 1,\r\n    ime: '',\r\n    prezime:'',\r\n    slika: '',\r\n    korisnickoIme: '',\r\n    lozinka: '',\r\n    datumRodjenja: '',\r\n    grad: '',\r\n    drzava: '',\r\n    email: '',\r\n    procitaneKnjige: [],\r\n    citamKnjige: [],\r\n    zaCitanjeKnjige: []\r\n  })\r\n  loadedUser = this.loadedUserSource.asObservable()\r\n\r\n  // Holds the data of requested book after clicking the link to the book\r\n  private requestedBookSource = new BehaviorSubject('')\r\n  requestedBook = this.requestedBookSource.asObservable()\r\n\r\n  // Holds the selected tab index\r\n  // App changes tab in menu on value change \r\n  private selectedTabSource = new BehaviorSubject(0)\r\n  selectedTab = this.selectedTabSource.asObservable()\r\n\r\n  // Holds the data of which object is requested for search\r\n  /*private searchObjectSource = new BehaviorSubject('')\r\n  searchObject = this.searchObjectSource.asObservable()\r\n\r\n  // Holds the data of params which are to be displayed in table\r\n  private searchParamsSource = new BehaviorSubject<Array<string>>([])\r\n  searchParams = this.searchParamsSource.asObservable()\r\n\r\n  // Holds the data which column of table should be rendered as a link\r\n  private searchLinkParamSource = new BehaviorSubject('')\r\n  searchLinkParam = this.searchLinkParamSource.asObservable()\r\n\r\n  // Holds the data in object as a form of map to which param should be \r\n  // represented in which specifically format(namewise)\r\n  private searchTableHeadersParamsSource = new BehaviorSubject<Object>({})\r\n  searchTableHeadersParams = this.searchTableHeadersParamsSource.asObservable()*/\r\n\r\n  // Holds the data which are to be displayed in table\r\n  private tableDataSource = new BehaviorSubject<Array<any>>([])\r\n  tableData = this.tableDataSource.asObservable()\r\n\r\n  // Holds the data which controls if table should be rendered or not\r\n  private showTableSource = new BehaviorSubject<boolean>(false)\r\n  showTable = this.showTableSource.asObservable()\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /*  Ovde mozda treba da se stavi da kad god se zove ova metoda on odradi refresh na bazi\r\n   *  ali obavezno proveri da li tako da odradis jer bi se to pozvalo i prvi put kada podesavas \r\n   *  session logged user!   \r\n   */\r\n\r\n  setLoggedUserAT(at:number):void {\r\n    this.loggedUserATSource.next(at)\r\n  }\r\n\r\n  postaviKorisnika(korisnik: Korisnik): void {\r\n    sessionStorage.setItem('ulogovaniKorisnik', JSON.stringify(korisnik))\r\n    this.loggedUserATSource.next(korisnik.AT)\r\n  }\r\n\r\n  dohvatiKorisnika(): Korisnik {\r\n    return JSON.parse(sessionStorage.getItem('ulogovaniKorisnik'));\r\n  }\r\n\r\n  changeRequestedUser(newRequestedUser: string) {\r\n    this.requestedUserSource.next(newRequestedUser)\r\n  }\r\n\r\n  changeRequestedBook(newRequestedBook: string) {\r\n    this.requestedBookSource.next(newRequestedBook)\r\n  }\r\n\r\n  setLoadedBook(book: Knjiga) {\r\n    this.loadedBookSource.next(book)\r\n  }\r\n\r\n  setLoadedUser(user: Korisnik) {\r\n    this.loadedUserSource.next(user)\r\n  }\r\n\r\n  changeTab(index: number) {\r\n    this.selectedTabSource.next(index)\r\n  }\r\n\r\n  setTableData(params: Array<any>) {\r\n    this.tableDataSource.next(params)\r\n  }\r\n\r\n  setShowTable(showTable: boolean) {\r\n    this.showTableSource.next(showTable)\r\n  }\r\n\r\n  /*setSearchObject(object: string) {\r\n    this.searchObjectSource.next(object)\r\n  }\r\n\r\n  setSearchParams(params: Array<string>) {\r\n    this.searchParamsSource.next(params)\r\n  }\r\n\r\n  setSearchLinkParam(linkParam: string) {\r\n    this.searchLinkParamSource.next(linkParam)\r\n  }\r\n\r\n  setSearchTableHeadersParams(headerParams: object) {\r\n    this.searchTableHeadersParamsSource.next(headerParams)\r\n  }*/\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Desavanje } from '../modules/Desavanje'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n  desavanjeLista: Desavanje[]\r\n\r\n  constructor() {\r\n    this.fillDesavanjaLista()\r\n  }\r\n\r\n  // Method returns full list of events based on params\r\n  nadjiDesavanja(searchParam: string, searchQuery: string): Array<Desavanje> {\r\n    if (Array.isArray(this.desavanjeLista[0][searchParam]))\r\n      return this.desavanjeLista.filter(x => x[searchParam].some(element => {\r\n        return (element == searchQuery)\r\n      }))\r\n    else\r\n      return this.desavanjeLista.filter(x => x[searchParam] == searchQuery)\r\n  }\r\n\r\n  // Method returns full list of events\r\n  getAllEvents(): Array<Desavanje> {\r\n    return this.desavanjeLista\r\n  }\r\n\r\n  // Temporary method for testing purposes\r\n  fillDesavanjaLista(): void {\r\n    this.desavanjeLista = [\r\n      {\r\n        id: 1,\r\n        privatno: true,\r\n        naziv: \"Babyshower\",\r\n        pocetak: new Date(),\r\n        kraj: new Date(),\r\n        opis: \"Ne znam, zene se okupljaju i tako to svasta, ne znam...\",\r\n        aktivno: true,\r\n        kreator: \"tduca998\"\r\n      },\r\n      {\r\n        id: 2,\r\n        privatno: false,\r\n        naziv: \"Signing\",\r\n        pocetak: new Date(),\r\n        kraj: new Date(),\r\n        opis: \"Dr. Castle potpisuje knjige dok obozavaoci dolaze i govore neke cringe citate iz knjige\",\r\n        aktivno: false,\r\n        kreator: \"rorynius\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Korisnik } from '../modules/Korisnik';\r\nimport { DataService } from './data.service';\r\nimport axios, { AxiosInstance } from 'axios'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  korisnikLista:Korisnik[]\r\n  axiosRequest: AxiosInstance\r\n\r\n  constructor(private data:DataService) { \r\n    this.fillPreduzeceLista() // temp za punjenje\r\n    /*axios.defaults.proxy = {\r\n      host: '127.0.0.1',\r\n      port: 5000\r\n    }*/\r\n    //axios.defaults.baseURL = 'http://localhost:5000/'\r\n    this.axiosRequest = axios.create({\r\n      baseURL: 'http://localhost:5000/',\r\n      timeout: 1000\r\n    })\r\n  }\r\n\r\n  sacuvajKorisnika(korisnik:Korisnik):void {\r\n    //this.korisnikLista.filter(x => x.id == korisnik.id)[0]\r\n    //this.korisnikLista[this.korisnikLista.indexOf(this.korisnikLista.filter(x => x.id == korisnik.id)[0])] = korisnik\r\n  }\r\n\r\n  dodajKorisnika(korisnik:Korisnik):void {\r\n    this.korisnikLista.push(korisnik)\r\n  }\r\n\r\n  obrisiKorisnika(korisnik:Korisnik):void {\r\n    var index = this.korisnikLista.indexOf(korisnik)\r\n    this.korisnikLista.splice(index, 1)\r\n  }\r\n\r\n  nadjiKorisnika(searchParam: string, searchQuery: string): Array<Korisnik> {\r\n    if (Array.isArray(this.korisnikLista[0][searchParam]))\r\n      return this.korisnikLista.filter(x => x[searchParam].some(element => {\r\n        return (element == searchQuery)\r\n      }))\r\n    else\r\n      return this.korisnikLista.filter(x => x[searchParam] == searchQuery)\r\n  }\r\n\r\n  async nadjiKorisnikaKorisnickoIme(korisnickoIme: string): Promise<Korisnik> {\r\n    //API call\r\n    //await axios.get(`API/users?korisnickoIme=${korisnickoIme}`)\r\n    await this.axiosRequest.get(`API/users?korisnickoIme=${korisnickoIme}`)\r\n    .then( response => {\r\n      console.log(response)\r\n    })\r\n    .catch( err => {\r\n      console.log(err)\r\n    })\r\n\r\n\r\n    // Hardcode\r\n    var userFound = this.korisnikLista.filter(x => x.korisnickoIme == korisnickoIme)\r\n    if (userFound.length > 0)\r\n      return userFound[0]\r\n    else\r\n      return null\r\n  }\r\n\r\n  nadjiKorisnikaId(id:number):Korisnik {\r\n    return this.korisnikLista.filter(x => x.id == id)[0]\r\n  }\r\n\r\n  korisnikLogIn(username:string, password:string):boolean {\r\n    var userFound = this.korisnikLista.filter(x => x.korisnickoIme == username && x.lozinka == password)\r\n    if (userFound.length > 0) {\r\n      this.data.postaviKorisnika(userFound[0])\r\n      console.log('User ' + username + ' found! ')\r\n      return true\r\n    }\r\n    else {\r\n      console.log('User ' + username + ' does not exists!')\r\n      return false\r\n    }\r\n  }\r\n\r\n  /* Totalno nebitne metode, privremeno u upotrebi radi pravljenja funkcionalnosti ostatka app */\r\n  fillPreduzeceLista():void {\r\n    this.korisnikLista = [\r\n      {\r\n        id: 1,\r\n        AT: 1,\r\n        ime: 'Dusan',\r\n        prezime:'Tomanic',\r\n        slika: 'nah',\r\n        korisnickoIme: 'tduca998',\r\n        lozinka: '1234',\r\n        datumRodjenja: '11/02/1998',\r\n        grad: 'Stara Pazova',\r\n        drzava: 'Srbija',\r\n        email: 'tduca998@gmail.com',\r\n        procitaneKnjige: [],\r\n        citamKnjige: [[1, 10, 1], [2, 15, 0]],\r\n        zaCitanjeKnjige: []\r\n      },\r\n      {\r\n        id: 2,\r\n        AT: 2,\r\n        ime: 'Rory',\r\n        prezime:'Wolk',\r\n        slika: 'gay',\r\n        korisnickoIme: 'rorynius',\r\n        lozinka: 'asd',\r\n        datumRodjenja: '20/05/1970',\r\n        grad: 'San Francisco',\r\n        drzava: 'USA',\r\n        email: 'rory@wolk.com',\r\n        procitaneKnjige: [2, 3],\r\n        citamKnjige: [[1, 20, 1]],\r\n        zaCitanjeKnjige: [1]\r\n      }\r\n    ]\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidatorService {\r\n\r\n  private usernameRegEx: RegExp\r\n  private emailEgEx: RegExp\r\n  private passwordRegEx: RegExp\r\n\r\n  constructor() {\r\n    this.usernameRegEx = new RegExp(/\\w{4}/gi) // minimum number of char (8)\r\n    this.emailEgEx = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\r\n    this.passwordRegEx = new RegExp(/\\w{8}/gi) \r\n  }\r\n\r\n  validateUsername(username: string): boolean {\r\n    if (username.search(this.usernameRegEx) == 0) return true;\r\n    else return false;\r\n  }\r\n\r\n  validatePassword(password: string): boolean {\r\n    return true;\r\n  }\r\n\r\n  validateEmail(email: string): boolean {\r\n    if (email.search(this.emailEgEx) == 0) return true;\r\n    else return false;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}