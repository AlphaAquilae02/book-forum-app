{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-book/add-book.component.ts","./src/app/components/add-book/add-book.component.html","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/components/book/book.component.ts","./src/app/components/book/book.component.html","./src/app/components/books-page/books-page.component.ts","./src/app/components/books-page/books-page.component.html","./src/app/components/change-password/change-password.component.ts","./src/app/components/change-password/change-password.component.html","./src/app/components/events-page/events-page.component.ts","./src/app/components/events-page/events-page.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/profiles-page/profiles-page.component.ts","./src/app/components/profiles-page/profiles-page.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/components/table/table.component.ts","./src/app/components/table/table.component.html","./src/app/components/user.directive.ts","./src/app/services/book.service.ts","./src/app/services/comment.service.ts","./src/app/services/data.service.ts","./src/app/services/event.service.ts","./src/app/services/user.service.ts","./src/app/services/validator.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\n/* U sustini ovo je URL nastavak na inicijalnih 'localhost:4200/' i poziv komponente koja odgovara trazenoj stranici */\r\nconst routes: Routes = [\r\n  {\r\n    path:'' , redirectTo: 'login', pathMatch: 'full'\r\n  },\r\n  {\r\n    path:'login' , component: LoginComponent\r\n  },\r\n  {\r\n    path:'change' , redirectTo: 'login', pathMatch: 'full'\r\n  },\r\n  {\r\n    path:'change/password' , component: ChangePasswordComponent\r\n  },\r\n  {\r\n    path:'register' , component:RegisterComponent\r\n  },\r\n  {\r\n    path:'home' , component: HomeComponent\r\n  },\r\n  {\r\n    path:'profile' , component: ProfileComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Projekat';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser'\r\nimport { NgModule } from '@angular/core'\r\nimport { FormsModule } from '@angular/forms'\r\nimport { MatTabsModule } from '@angular/material/tabs'\r\nimport { MatFormFieldModule } from '@angular/material/form-field'\r\nimport { MatInputModule } from '@angular/material/input'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { ReactiveFormsModule } from '@angular/forms'\r\nimport { MatTableModule } from '@angular/material/table'\r\nimport { MatCardModule } from '@angular/material/card'\r\nimport { MatPaginatorModule } from '@angular/material/paginator'\r\nimport { MatDatepickerModule } from '@angular/material/datepicker'\r\nimport { MatNativeDateModule } from '@angular/material/core'\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatDividerModule } from '@angular/material/divider'\r\nimport { MatListModule } from '@angular/material/list'\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar'\r\nimport { NgxCaptchaModule } from 'ngx-captcha'\r\nimport { MatRadioModule } from '@angular/material/radio'\r\n\r\nimport { AppRoutingModule } from './app-routing.module'\r\nimport { AppComponent } from './app.component'\r\nimport { LoginComponent } from './components/login/login.component'\r\nimport { AdminComponent } from './components/admin/admin.component'\r\nimport { RegisterComponent } from './components/register/register.component'\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component'\r\nimport { HomeComponent } from './components/home/home.component'\r\nimport { UserDirective } from './components/user.directive'\r\nimport { ProfileComponent } from './components/profile/profile.component'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BookComponent } from './components/book/book.component';\r\nimport { BooksPageComponent } from './components/books-page/books-page.component';\r\nimport { AddBookComponent } from './components/add-book/add-book.component';\r\nimport { ProfilesPageComponent } from './components/profiles-page/profiles-page.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { EventsPageComponent } from './components/events-page/events-page.component';\r\nimport { TableComponent } from './components/table/table.component'\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    AdminComponent,\r\n    RegisterComponent,\r\n    ChangePasswordComponent,\r\n    HomeComponent,\r\n    UserDirective,\r\n    ProfileComponent,\r\n    BookComponent,\r\n    BooksPageComponent,\r\n    AddBookComponent,\r\n    ProfilesPageComponent,\r\n    SearchComponent,\r\n    EventsPageComponent,\r\n    TableComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatPaginatorModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatSlideToggleModule,\r\n    MatProgressBarModule,\r\n    NgxCaptchaModule,\r\n    MatRadioModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Knjiga } from 'src/app/modules/Knjiga';\r\nimport { BookService } from 'src/app/services/book.service';\r\n\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styleUrls: ['./add-book.component.css']\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n  knjiga:Knjiga\r\n\r\n  constructor(private bookService:BookService) {\r\n    this.knjiga = {\r\n      id: 1,\r\n      slika: 'asd',\r\n      naziv: '',\r\n      autor: [],\r\n      datumIzdavanja: '',\r\n      zanr: [],\r\n      opis: '',\r\n      prosecnaOcena: 0,\r\n      brStrana: 0,\r\n      odobrena: false\r\n    }\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  dodajKnjigu():void {\r\n    this.bookService.dodajKnjigu(this.knjiga)\r\n  }\r\n\r\n}\r\n","<br>\r\n<mat-card class=\"mat-elevation-z8\">\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Naziv:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.naziv\" value=\"{{ knjiga.naziv }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Autor:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.autor\" value=\"{{ knjiga.autor[0] }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Datum izdavanja:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.datumIzdavanja\" value=\"{{ knjiga.datumIzdavanja }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Zanr:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.zanr\" value=\"{{ knjiga.zanr[0] }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Kratak opis:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.opis\" value=\"{{ knjiga.opis }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Broj strana:</mat-label>\r\n        <input matInput [(ngModel)]=\"knjiga.brStrana\" value=\"{{ knjiga.brStrana }}\">\r\n    </mat-form-field>\r\n\r\n    <button mat-raised-button (click)=\"dodajKnjigu()\">Dodaj knjigu</button>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>admin works!</p>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core'\r\nimport { Knjiga } from 'src/app/modules/Knjiga'\r\nimport { CommentService } from 'src/app/services/comment.service'\r\nimport { Komentar } from 'src/app/modules/Komentar'\r\nimport { Korisnik } from 'src/app/modules/Korisnik'\r\nimport { DataService } from 'src/app/services/data.service'\r\nimport { BookService } from 'src/app/services/book.service'\r\nimport { UserService } from 'src/app/services/user.service'\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-book',\r\n  templateUrl: './book.component.html',\r\n  styleUrls: ['./book.component.css']\r\n})\r\nexport class BookComponent implements OnInit {\r\n  @Input() ucitanaKnjiga: Knjiga;\r\n\r\n  komentari: Array<Komentar>\r\n  commentsTableColumns: string[]\r\n  ulogovaniKorisnik: Korisnik\r\n\r\n  procitao: boolean\r\n  citam: boolean\r\n  zaCitanje: boolean\r\n  showTable: boolean\r\n\r\n  ocena: number\r\n  komentar: string\r\n\r\n  isReadingBookInfo: Array<number> // [bookId, progressValue, isReading]\r\n\r\n  constructor(private commentService: CommentService, private data: DataService, private userService: UserService) {\r\n    this.commentsTableColumns = ['korisnikId', 'ocena', 'komentar']\r\n    this.isReadingBookInfo = [0, 0, 0]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.ulogovaniKorisnik = this.userService.nadjiKorisnikaId(this.data.dohvatiKorisnika().id)\r\n    if (this.ulogovaniKorisnik == undefined)\r\n      this.ulogovaniKorisnik = this.data.dohvatiKorisnika()\r\n\r\n    this.data.loadedBook.subscribe(book => this.ucitanaKnjiga = book)\r\n    console.log(this.userService.nadjiKorisnikaId(this.data.dohvatiKorisnika().id))\r\n    this.prikaziKjigu()\r\n  }\r\n\r\n  // Loads data to display on view\r\n  prikaziKjigu(): void {\r\n    this.loadToggles()\r\n    this.loadComments()\r\n    this.loadUserComment()\r\n  }\r\n\r\n  // load toggles\r\n  loadToggles() {\r\n    this.procitao = this.ulogovaniKorisnik.procitaneKnjige.includes(this.ucitanaKnjiga.id)\r\n    this.citam = false\r\n    var loaded = false\r\n    this.ulogovaniKorisnik.citamKnjige.forEach(element => {\r\n      if (element[0] == this.ucitanaKnjiga.id) {\r\n        this.isReadingBookInfo = element\r\n        loaded = true\r\n      }\r\n    });\r\n    if (!loaded)\r\n      this.isReadingBookInfo = [this.ucitanaKnjiga.id, 0, 0]\r\n    this.zaCitanje = this.ulogovaniKorisnik.zaCitanjeKnjige.includes(this.ucitanaKnjiga.id)\r\n  }\r\n\r\n  // load comments for currently loaded book\r\n  loadComments() {\r\n    this.komentari = this.commentService.nadjiKnjigaKomentare(this.ucitanaKnjiga)\r\n    if (this.komentari.length != 0)\r\n      this.showTable = true\r\n    else this.showTable = false\r\n  }\r\n\r\n  // load user comment into input fields\r\n  loadUserComment() {\r\n    if (this.commentService.nadjiKomentar(this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id) != null) {\r\n      this.komentar = this.commentService.nadjiKomentar(this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id).komentar\r\n      this.ocena = this.commentService.nadjiKomentar(this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id).ocena\r\n    }\r\n    else {\r\n      this.komentar = \"\"\r\n      this.ocena = 0\r\n    }\r\n  }\r\n\r\n  // Saves freshly edited/added comment\r\n  saveUserComment(): void {\r\n    if (this.commentService.nadjiKomentar(this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id) != null)\r\n      this.commentService.izmeniKomentar(this.komentar, this.ocena, this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id)\r\n    else \r\n      this.commentService.dodajKomentar(this.ulogovaniKorisnik.id, this.ucitanaKnjiga.id, this.ocena, this.komentar)\r\n    this.loadComments()\r\n  }\r\n\r\n  // Returns all names based on param id\r\n  nadjiKorisnika(id: number): string {\r\n    return this.userService.nadjiKorisnikaId(id).korisnickoIme\r\n  }\r\n\r\n  // Sends username of the users profile to be displayed\r\n  otvoriKorisnika(requestedUser: string): void {\r\n    this.data.changeRequestedUser(requestedUser)\r\n    this.data.changeTab(2)\r\n  }\r\n\r\n  // triggers on progressValueChange\r\n  progressUpdated(): void {\r\n    this.toggledCita(this.isReadingBookInfo[2], true)\r\n  }\r\n\r\n  toggledCita(event, save:boolean): void {\r\n    this.isReadingBookInfo[2] = event ? 1 : 0\r\n    if (event) {\r\n      this.citam = true\r\n      this.zaCitanje = false\r\n      this.toggledZaCitanje(false)\r\n    }\r\n\r\n    // update cita array\r\n    var match = false\r\n    if (this.ulogovaniKorisnik.citamKnjige.length > 0)\r\n      this.ulogovaniKorisnik.citamKnjige.forEach(element => {\r\n        if (element[0] == this.ucitanaKnjiga.id) {\r\n          match = true\r\n          element = this.isReadingBookInfo\r\n        }\r\n      });\r\n    if (!match)\r\n      this.ulogovaniKorisnik.citamKnjige.push(this.isReadingBookInfo)\r\n\r\n      if (save) this.saveChanges()\r\n  }\r\n\r\n  toggledZaCitanje(save: boolean): void {\r\n    // update zaCitanje array\r\n    var match = false\r\n    if (this.ulogovaniKorisnik.zaCitanjeKnjige.length > 0)\r\n      this.ulogovaniKorisnik.zaCitanjeKnjige.forEach(element => {\r\n        if (element == this.ucitanaKnjiga.id) {\r\n          match = true\r\n          if (!this.zaCitanje)\r\n            this.ulogovaniKorisnik.zaCitanjeKnjige.splice(this.ulogovaniKorisnik.zaCitanjeKnjige.indexOf(element), 1)\r\n        }\r\n      })\r\n    if (!match)\r\n      this.ulogovaniKorisnik.zaCitanjeKnjige.push(this.ucitanaKnjiga.id)\r\n\r\n    if (save) this.saveChanges()\r\n  }\r\n\r\n  toggledProcitao(): void {\r\n    this.isReadingBookInfo[1] = this.ucitanaKnjiga.brStrana\r\n    this.toggledCita(false, false)\r\n    if (this.procitao)\r\n      this.citam = true\r\n    this.zaCitanje = false\r\n    this.toggledZaCitanje(false)\r\n\r\n\r\n    // update procitao array\r\n    var match = false\r\n    if (this.ulogovaniKorisnik.procitaneKnjige.length > 0)\r\n      this.ulogovaniKorisnik.procitaneKnjige.forEach(element => {\r\n        if (element == this.ucitanaKnjiga.id)\r\n          match = true\r\n      })\r\n    if (!match) {\r\n      this.ulogovaniKorisnik.procitaneKnjige.push(this.ucitanaKnjiga.id)\r\n    }\r\n\r\n    this.saveChanges()\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.userService.sacuvajKorisnika(this.ulogovaniKorisnik)\r\n    console.log(this.ulogovaniKorisnik)\r\n  }\r\n\r\n}\r\n","<br>\r\n<mat-card class=\"mat-elevation-z8\">\r\n    <img src=\"https://bit.ly/2G5Fz3u\" alt=\"ninja\" width=\"178\" height=\"100\"><br>\r\n\r\n    <h3><b>{{ ucitanaKnjiga.naziv }}</b></h3>\r\n    <div *ngIf=\"ulogovaniKorisnik.AT>0 && ucitanaKnjiga.odobrena\">\r\n        <mat-slide-toggle [(ngModel)]=\"procitao\" (ngModelChange)=\"toggledProcitao()\" [disabled]=\"procitao\">Procitao</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"isReadingBookInfo[2]\" (ngModelChange)=\"toggledCita($event, true)\" [disabled]=\"procitao\">Trenutno citam</mat-slide-toggle>\r\n        <mat-slide-toggle [(ngModel)]=\"zaCitanje\" (ngModelChange)=\"toggledZaCitanje(true)\" [disabled]=\"citam\">Procitacu je</mat-slide-toggle>\r\n    </div>\r\n    <div *ngIf=\"isReadingBookInfo[2] && ucitanaKnjiga.odobrena\">\r\n        <br>\r\n        <mat-progress-bar mode=\"determinate\" [value]=\"isReadingBookInfo[1]/ucitanaKnjiga.brStrana*100\"></mat-progress-bar>\r\n        <input matInput type=\"number\" appearance=\"textfield\" [(ngModel)]=\"isReadingBookInfo[1]\" (ngModelChange)=\"progressUpdated()\" value=\"{{ isReadingBookInfo[1] }}\">\r\n        <label>od ukupno {{ ucitanaKnjiga.brStrana }} strana</label>\r\n        <br>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n\r\n    <label><b>Autor:</b></label>\r\n    <label class=\"customLabel\" *ngFor=\"let string of ucitanaKnjiga.autor\">{{ string }}</label>\r\n    <mat-divider></mat-divider><br>\r\n\r\n    <label><b>Datum izdavanja:</b></label>\r\n    <label class=\"customLabel\">{{ ucitanaKnjiga.datumIzdavanja }}</label>\r\n    <mat-divider></mat-divider><br>\r\n\r\n    <label><b>Zanr:</b></label>\r\n    <label class=\"customLabel\" *ngFor=\"let string of ucitanaKnjiga.zanr\">{{ string }}</label>\r\n    <mat-divider></mat-divider><br>\r\n\r\n    <label><b>Rezime:</b></label>\r\n    <label class=\"customLabel\">{{ ucitanaKnjiga.opis }}</label>\r\n    <mat-divider></mat-divider><br>\r\n\r\n    <label><b>Ocena:</b></label>\r\n    <label class=\"customLabel\">{{ ucitanaKnjiga.prosecnaOcena }}</label>\r\n    <mat-divider></mat-divider><br>\r\n\r\n    <table mat-table *ngIf=\"showTable\" [dataSource]='komentari' class=\"specialTable\">\r\n\r\n        <ng-container matColumnDef=\"korisnikId\">\r\n            <th mat-header-cell *matHeaderCellDef> Korisnik: </th>\r\n            <td mat-cell *matCellDef=\"let Komentar\">\r\n                <a *ngIf=\"ulogovaniKorisnik.AT!=0\" [routerLink]=\"\" (click)='otvoriKorisnika(nadjiKorisnika(Komentar.korisnikId))'>{{ nadjiKorisnika(Komentar.korisnikId) }}</a>\r\n                <Label *ngIf=\"ulogovaniKorisnik.AT==0\">Anonymous</Label>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"ocena\">\r\n            <th mat-header-cell *matHeaderCellDef> Ocena: </th>\r\n            <td mat-cell *matCellDef=\"let Komentar\"> {{ Komentar.ocena }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"komentar\">\r\n            <th mat-header-cell *matHeaderCellDef> Komentar: </th>\r\n            <td mat-cell *matCellDef=\"let Komentar\"> {{ Komentar.komentar }}</td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"commentsTableColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: commentsTableColumns;\"></tr>\r\n    </table>\r\n\r\n    <div *ngIf=\"isReadingBookInfo[1]/ucitanaKnjiga.brStrana*100 > 50 && ucitanaKnjiga.odobrena && ulogovaniKorisnik.AT!=0\">\r\n        <br>\r\n        <mat-divider></mat-divider>\r\n        <h3><b>Ostavi komentar:</b></h3>\r\n        <mat-form-field appearance=\"legacy\">\r\n            <mat-label>ocena:</mat-label>\r\n            <input matInput type=\"number\" appereance=\"textfield\" [(ngModel)]=\"ocena\" value=\"{{ ocena }}\">\r\n        </mat-form-field>\r\n        <br>\r\n        <mat-form-field appearance=\"legacy\" class=\"customInput\">\r\n            <mat-label>Komentar:</mat-label>\r\n            <input matInput type=\"text\" [(ngModel)]=\"komentar\" value=\"{{ komentar }}\">\r\n        </mat-form-field>\r\n        <button mat-raised-button (click)=\"saveUserComment()\">SACUVAJ</button>\r\n        <br>\r\n    </div>\r\n</mat-card>","import { Component, OnInit, ViewChild, OnDestroy, Output, EventEmitter } from '@angular/core';\r\nimport { Location } from '@angular/common'\r\nimport { BookService } from 'src/app/services/book.service';\r\nimport { BookComponent } from '../book/book.component';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Knjiga } from 'src/app/modules/Knjiga';\r\nimport { Table } from 'src/app/modules/Table';\r\n\r\n@Component({\r\n  selector: 'app-books-page',\r\n  templateUrl: './books-page.component.html',\r\n  styleUrls: ['./books-page.component.css']\r\n})\r\n\r\nexport class BooksPageComponent implements OnInit, OnDestroy {\r\n  @ViewChild(BookComponent) bookChild: BookComponent\r\n\r\n  requestedBook: string\r\n  ucitanaKnjiga: Knjiga\r\n\r\n  AT: number\r\n  showBook: boolean\r\n  showAddBook: boolean\r\n\r\n  showBooksTableParams: Table\r\n  showBooksTable: boolean\r\n\r\n  constructor(private location: Location, private bookService: BookService, private data: DataService) {\r\n    this.showBook = false\r\n    this.showAddBook = false\r\n  }\r\n\r\n  // Ova implementacija radi za dugme, i to radi odlicno! Jedino ima problem kod search param choice\r\n  ngOnInit(): void {\r\n    this.showBooksTableParams = {\r\n      searchObject: \"knjiga\", \r\n      searchParams: [\"naziv\", \"autor\", \"zanr\", \"button\"], \r\n      linkParam: \"naziv\", \r\n      tableData: [],\r\n      headerMap: { \r\n        naziv: \"Naziv\",\r\n        autor: \"Autor\",\r\n        zanr: \"Zanr\",\r\n        button: \"\"\r\n      },\r\n      buttonLabel: \"Odobri\"\r\n    }\r\n    this.data.tableData.subscribe(tableData => this.showBooksTableParams.tableData = tableData)\r\n    this.data.setShowTable(false)\r\n    this.data.showTable.subscribe(showTable => this.showBooksTable = showTable)\r\n    \r\n    this.data.requestedBook.subscribe(requestedBook => this.requestedBook = requestedBook)\r\n    this.data.loggedUserAT.subscribe(AT => this.AT = AT)\r\n    if (this.requestedBook != \"\")\r\n      this.openBook()\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.data.changeRequestedBook(\"\")\r\n    this.data.setTableData([])\r\n  }\r\n\r\n  openBook(): void {\r\n    this.data.setLoadedBook(this.bookService.nadjiKnjiguNaziv(this.requestedBook))\r\n    this.showBook = true\r\n    this.showAddBook = false\r\n    if (this.bookChild)\r\n      this.bookChild.prikaziKjigu()\r\n  }\r\n\r\n  openAddBook(show:boolean) {\r\n    this.showAddBook = show\r\n  }\r\n\r\n  dodajKnjige() {\r\n    console.log(\"Dodaj knjige\")\r\n  }\r\n\r\n  odobriKnjige() {\r\n    // ovde stavi da kad klikne izadje tabela sa svim neodobrenim knjigama!\r\n    console.log(\"Odobri knjige\")\r\n  }\r\n  \r\n}\r\n","<div class=\"content\">\r\n  <br *ngIf=\"AT==2\">\r\n  <button class=\"asd\" mat-raised-button *ngIf=\"AT==2\" (click)=\"dodajKnjige()\">Dodaj knjige</button>\r\n  <button class=\"asd\" mat-raised-button *ngIf=\"AT==2\" (click)=\"odobriKnjige()\">Odobri knjige</button>\r\n  <br *ngIf=\"AT==2\">\r\n  <app-search [searchParams]=\"showBooksTableParams\" (showAddOption)=\"showAddBook=$event\"></app-search>\r\n  <app-table *ngIf=\"showBooksTable\" [tableParams]=\"showBooksTableParams\" (linkClick)=\"openBook()\"></app-table>\r\n  <app-book *ngIf=\"showBook\"></app-book>\r\n  <app-add-book *ngIf=\"showAddBook && AT!=0\"></app-add-book>\r\n  <br>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  email:string\r\n  emailAuthenticated:boolean\r\n  novaLozinka:string\r\n  novaLozinka2:string\r\n\r\n  constructor(private router:Router) {\r\n    this.emailAuthenticated = false\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendEmail():void {\r\n    this.emailAuthenticated = true\r\n  }\r\n\r\n  changePassword():void {\r\n    this.back()\r\n  }\r\n\r\n  back():void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <br>\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-form-field appearance=\"legacy\">\r\n            <mat-label>email:</mat-label>\r\n            <input matInput [(ngModel)]=\"email\" required [disabled]=\"emailAuthenticated\">\r\n            <mat-hint align=\"start\">Unesite Vasu email adresu:</mat-hint>\r\n        </mat-form-field>\r\n        <br> <br>\r\n        <button mat-raised-button *ngIf=\"!emailAuthenticated\" (click)=\"sendEmail()\">Posalji zahtev za promenu lozinke</button>\r\n\r\n        <div *ngIf=\"emailAuthenticated\">\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Lozinka:</mat-label>\r\n                <input matInput type=\"password\" [(ngModel)]=\"novaLozinka\" required>\r\n                <mat-hint align=\"start\">Unesite <b>novu</b> lozinku:</mat-hint>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Lozinka:</mat-label>\r\n                <input matInput type=\"password\" [(ngModel)]=\"novaLozinka2\" required>\r\n                <mat-hint align=\"start\">Unesite <b>ponovo novu</b> lozinku:</mat-hint>\r\n            </mat-form-field>\r\n            <br>\r\n            <button mat-raised-button (click)=\"changePassword()\">Sacuvaj novu lozinku</button>\r\n        </div> \r\n        <br><br>\r\n        <button mat-raised-button (click)=\"back()\">Nazad</button>\r\n    </mat-card>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { Table } from '../../modules/Table'\r\n\r\n@Component({\r\n  selector: 'app-events-page',\r\n  templateUrl: './events-page.component.html',\r\n  styleUrls: ['./events-page.component.css']\r\n})\r\nexport class EventsPageComponent implements OnInit, OnDestroy {\r\n  showEventsTableParams: Table\r\n\r\n  constructor(private data: DataService, private eventService: EventService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.showEventsTableParams = {\r\n      searchObject: \"desavanje\",\r\n      searchParams: [\"naziv\", \"aktivno\"],\r\n      linkParam: \"naziv\",\r\n      tableData: this.eventService.getAllEvents(),\r\n      headerMap: {\r\n        naziv: \"Naziv\",\r\n        aktivno: \"Status\"\r\n      },\r\n      buttonLabel: \"\"\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //this.data.setShowTable(false)\r\n  }\r\n\r\n}\r\n","<div class=\"content\">\r\n    <app-table [tableParams]=\"showEventsTableParams\"></app-table>\r\n    <br>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Router } from '@angular/router';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  selectedTab = new FormControl(0);\r\n  logButton: string\r\n\r\n  searchTypes: Array<string>\r\n\r\n  AT:number\r\n\r\n  constructor(private router: Router, private data: DataService) {\r\n    /* \r\n     * Ovo stoji da bi se na reload postavio onaj korisnik koji je zapravo ulogovan\r\n     * moze i bez toga ali onda svaki refresh zapravo odradi logout, kasnije proveriti\r\n     * u zavisnosti sta si napravio za validaciju i autentifikaciju trenutno \r\n     * ulogovanog korisnika i shodno tome promeni logiku ovoga\r\n     */\r\n    this.data.setLoggedUserAT(this.data.dohvatiKorisnika().AT)\r\n    this.data.selectedTab.subscribe(selectedTab => this.selectedTab.setValue(selectedTab))\r\n    this.data.loggedUserAT.subscribe(AT => this.AT = AT)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setTabs()\r\n  }\r\n\r\n  logOut(): void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  goToProfileTab() {\r\n    this.selectedTab.setValue(2)\r\n  }\r\n\r\n  goToBookTab() {\r\n    this.selectedTab.setValue(0)\r\n  }\r\n\r\n  // To be called on init \r\n  // Setting up tabs in main/home menu\r\n  setTabs(): void {\r\n    this.selectedTab.setValue(2)\r\n    if (this.AT == 0) {\r\n      this.logButton = 'Log In'\r\n      this.selectedTab.setValue(0)\r\n    }\r\n    else {\r\n      this.logButton = 'Log Out'\r\n    }\r\n  }\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\" [selectedIndex]=\"selectedTab.value\"\r\n    (selectedIndexChange)=\"selectedTab.setValue($event)\">\r\n    <mat-tab label=\"Knjige\">\r\n        <app-books-page *ngIf=\"selectedTab.value == 0\"></app-books-page>\r\n    </mat-tab>\r\n    <mat-tab label=\"Desavanja\">\r\n        <app-events-page *ngIf=\"selectedTab.value == 1\"></app-events-page>\r\n    </mat-tab>\r\n    <mat-tab *ngIf=\"AT\" label=\"Profil\">\r\n        <app-profiles-page *ngIf=\"selectedTab.value == 2\"></app-profiles-page>\r\n    </mat-tab>\r\n    <mat-tab>\r\n        <ng-template mat-tab-label>\r\n            <span (click)='logOut()'>{{ logButton }}</span>\r\n        </ng-template>\r\n    </mat-tab>\r\n</mat-tab-group>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { ValidatorService } from 'src/app/services/validator.service'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username:string\r\n  password:string\r\n\r\n  constructor(private router:Router, private userService:UserService, private data:DataService,\r\n    private validatorService: ValidatorService) { \r\n    this.username = ''\r\n    this.password = ''\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.data.postaviKorisnika({\r\n      id: 0,\r\n      AT: 0,\r\n      ime: '',\r\n      prezime:' ',\r\n      slika: '',\r\n      korisnickoIme: '',\r\n      lozinka: '',\r\n      datumRodjenja: '',\r\n      grad: '',\r\n      drzava: '',\r\n      email: '', \r\n      procitaneKnjige: [],\r\n      citamKnjige: [],\r\n      zaCitanjeKnjige: []\r\n    });\r\n  }\r\n  \r\n  login():void {\r\n    var userFound:boolean = false\r\n    if (this.validatorService.validateUsername(this.username) && this.validatorService.validatePassword(this.password) ) {\r\n      userFound = this.userService.korisnikLogIn(this.username, this.password)\r\n    }\r\n    \r\n    if (userFound) {\r\n      this.router.navigate(['/home'])\r\n    }\r\n    console.log('login button clicked');\r\n  }\r\n\r\n  changePassword():void {\r\n    this.router.navigate(['/change/password']);\r\n  }\r\n\r\n  register():void {\r\n    this.router.navigate(['/register']);\r\n    console.log('register button clicked');\r\n  }\r\n\r\n  guest():void {\r\n    this.router.navigate(['/home']);\r\n    console.log('guest entry');\r\n  }\r\n}\r\n","<div id=\"mainContent\">\r\n  <div class=\"content\">\r\n    <br>\r\n    <mat-card class=\"mat-elevation-z8\">\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Korisnicko Ime:</mat-label>\r\n        <input matInput [(ngModel)]=\"username\" required (keydown.enter)=\"login()\">\r\n      </mat-form-field>\r\n      <br>\r\n      <mat-form-field appearance=\"legacy\">\r\n        <mat-label>Lozinka:</mat-label>\r\n        <input matInput [(ngModel)]=\"password\" type=\"password\" required (keydown.enter)=\"login()\">\r\n      </mat-form-field><br>\r\n\r\n      <a mat-button (click)=\"changePassword()\" target=\"\">Zaboravio sam lozinku!</a><br>\r\n      <button mat-raised-button (click)=\"login()\">Prijavljivanje</button><br>\r\n      <button mat-raised-button (click)=\"register()\">Registracija</button><br>\r\n      <button mat-raised-button (click)=\"guest()\">Nastavi kao gost</button><br>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { Component, OnInit, ViewChild, Output, EventEmitter, Input } from '@angular/core';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Korisnik } from 'src/app/modules/Korisnik';\r\nimport { BookService } from 'src/app/services/book.service';\r\nimport { CommentService } from 'src/app/services/comment.service';\r\nimport { Komentar } from 'src/app/modules/Komentar';\r\nimport { Knjiga } from 'src/app/modules/Knjiga';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  @Input() korisnik: Korisnik\r\n\r\n  editDisabled: boolean\r\n  commentsTableColumns: string[]\r\n  booksTableReadColumns: string[]\r\n  booksTableReadingColumns: string[]\r\n  booksTableToReadColumns: string[]\r\n\r\n  askedBook: string\r\n  editButtonLabel: string\r\n\r\n  // Variables for listing out books under (read, reading, to be read) tables\r\n  tableDataArray: Array<Array<any>>\r\n  tableSizeOptions: Array<number>\r\n  tableSizeInitial: number\r\n  tableMaxLength: number\r\n\r\n  constructor(private userService: UserService, private data: DataService, private bookService: BookService, private commentService: CommentService) {\r\n    this.editButtonLabel = \"Promeni podatke\"\r\n    this.editDisabled = true\r\n    this.commentsTableColumns = ['knjigaId', 'komentar', 'ocena', 'zanr']\r\n    this.booksTableReadColumns = ['procitaneKnjige']\r\n    this.booksTableReadingColumns = ['citamKnjige']\r\n    this.booksTableToReadColumns = ['zaCitanjeKnjige']\r\n    this.tableSizeInitial = 5\r\n    this.tableSizeOptions = [1, 5, 15, 50]\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.data.loadedUser.subscribe(user => this.korisnik = user)\r\n    this.prikaziKorisnika()\r\n  }\r\n\r\n  prikaziKorisnika(): void {\r\n    this.tableDataArray = [this.korisnik.procitaneKnjige, this.korisnik.citamKnjige, this.korisnik.zaCitanjeKnjige]\r\n    this.tableDataArray[1] = this.tableDataArray[1].filter(element => element[2] == 1)\r\n\r\n    this.tableMaxLength = 0\r\n    this.tableDataArray.forEach(element => {\r\n      if (element.length > this.tableMaxLength)\r\n        this.tableMaxLength = element.length\r\n    });\r\n  }\r\n\r\n  // Method to unlock/lock input fields for user params\r\n  promeniPodatke(): void {\r\n    this.editDisabled = !this.editDisabled\r\n    if (this.editDisabled) \r\n      this.editButtonLabel = \"Promeni podatke\"\r\n    else \r\n      this.editButtonLabel = \"Sacuvaj podatke\"\r\n  }\r\n\r\n  //\r\n  pokupiKomentare(): Komentar[] {\r\n    return this.commentService.nadjiKorisnikKomentare(this.korisnik)\r\n  }\r\n\r\n  //\r\n  pokupiKnjigu(id: number): Knjiga {\r\n    return this.bookService.nadjiKnjiguId(id)\r\n  }\r\n\r\n  // Method of authentification used to change value on field which controls display of \"EDIT\" button\r\n  authenticateUser(): boolean {\r\n    var ulogovaniKorisnik = this.data.dohvatiKorisnika()\r\n    if (this.korisnik.id == ulogovaniKorisnik.id)\r\n      return true\r\n    else return false\r\n  }\r\n\r\n  // Method to be called upon clicking on book name link\r\n  otvoriKnjigu(requestedBook: string): void {\r\n    this.data.changeRequestedBook(requestedBook)\r\n    this.data.changeTab(0)\r\n  }\r\n\r\n  // Method of pagination event change used to update shown data in table\r\n  onPageChanged(e) {\r\n    let firstCut = e.pageIndex * e.pageSize;\r\n    let secondCut = firstCut + e.pageSize;\r\n    this.tableDataArray[0] = this.korisnik.procitaneKnjige.slice(firstCut, secondCut);\r\n    this.tableDataArray[1] = this.korisnik.citamKnjige.slice(firstCut, secondCut);\r\n    this.tableDataArray[2] = this.korisnik.zaCitanjeKnjige.slice(firstCut, secondCut);\r\n  }\r\n\r\n}\r\n","<br>\r\n<div>\r\n  \r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <img src=\"https://bit.ly/2G5Fz3u\" alt=\"ninja\" width=\"178\" height=\"100\"><br>\r\n    <h3>{{ korisnik.korisnickoIme }}</h3>\r\n  </mat-card>\r\n  <br>\r\n\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <mat-form-field appearance=\"legacy\">\r\n      <mat-label>Ime:</mat-label>\r\n      <input matInput [(ngModel)]=\"korisnik.ime\" value=\"{{ korisnik.ime }}\"\r\n        disabled=\"{{ editDisabled }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n      <mat-label>Prezime:</mat-label>\r\n      <input matInput [(ngModel)]=\"korisnik.prezime\" value=\"{{ korisnik.prezime }}\"\r\n        disabled=\"{{ editDisabled }}\">\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n      <mat-label>Datum Rodjenja:</mat-label>\r\n      <input matInput [(ngModel)]=\"korisnik.datumRodjenja\" value=\"{{ korisnik.datumRodjenja }}\"\r\n        disabled=\"{{ editDisabled }}\">\r\n    </mat-form-field>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n      <mat-label>Grad:</mat-label>\r\n      <input matInput [(ngModel)]=\"korisnik.grad\" value=\"{{ korisnik.grad }}\"\r\n        disabled=\"{{ editDisabled }}\">\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <mat-form-field appearance=\"legacy\">\r\n      <mat-label>email:</mat-label>\r\n      <input matInput [(ngModel)]=\"korisnik.email\" value=\"{{ korisnik.email }}\"\r\n        disabled=\"{{ editDisabled }}\">\r\n    </mat-form-field>\r\n    <br>\r\n\r\n    <label>Last Active: OVDE DODAJ KADA JE POSLEDNJI PUT BIO LIVE</label><br>\r\n    <label>Online: </label><span class=\"onlineIndicator\"></span><br>\r\n    <button mt-raised-button *ngIf=\"authenticateUser()\" (click)='promeniPodatke()'>{{ editButtonLabel }}</button>\r\n  </mat-card>\r\n  <br>\r\n\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]='tableDataArray[0]' class=\"specialTable\">\r\n\r\n      <ng-container matColumnDef=\"procitaneKnjige\">\r\n        <th mat-header-cell *matHeaderCellDef> Procitane knjige: </th>\r\n        <td mat-cell *matCellDef=\"let number\">\r\n          <a [routerLink]=\"\" (click)='otvoriKnjigu(pokupiKnjigu(number).naziv)'>{{ pokupiKnjigu(number).naziv }}</a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"booksTableReadColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: booksTableReadColumns;\"></tr>\r\n    </table>\r\n\r\n    <table mat-table [dataSource]='tableDataArray[1]' class=\"specialTable\">\r\n\r\n      <ng-container matColumnDef=\"citamKnjige\">\r\n        <th mat-header-cell *matHeaderCellDef> Trenutno se citaju: </th>\r\n        <td mat-cell *matCellDef=\"let array\">\r\n          <a [routerLink]=\"\" (click)='otvoriKnjigu(pokupiKnjigu(array[0]).naziv)'>{{ pokupiKnjigu(array[0]).naziv }}</a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"booksTableReadingColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: booksTableReadingColumns;\"></tr>\r\n    </table>\r\n\r\n    <table mat-table [dataSource]='tableDataArray[2]' class=\"specialTable\">\r\n\r\n      <ng-container matColumnDef=\"zaCitanjeKnjige\">\r\n        <th mat-header-cell *matHeaderCellDef> Za citanje: </th>\r\n        <td mat-cell *matCellDef=\"let number\">\r\n          <a [routerLink]=\"\" (click)='otvoriKnjigu(pokupiKnjigu(number).naziv)'>{{ pokupiKnjigu(number).naziv }}</a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"booksTableToReadColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: booksTableToReadColumns;\"></tr>\r\n    </table>\r\n\r\n    <mat-paginator [length]=\"tableMaxLength\" [pageSize]=\"tableSizeInitial\" [pageSizeOptions]=\"tableSizeOptions\" (page)=\"onPageChanged($event)\">\r\n    </mat-paginator>\r\n  </mat-card>\r\n  <br>\r\n\r\n\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]='pokupiKomentare()' class=\"specialTable\">\r\n\r\n      <ng-container matColumnDef=\"knjigaId\">\r\n        <th mat-header-cell *matHeaderCellDef> Knjiga: </th>\r\n        <td mat-cell *matCellDef=\"let Komentar\">\r\n          <a [routerLink]=\"\" (click)='otvoriKnjigu(pokupiKnjigu(Komentar.knjigaId).naziv)'>{{ pokupiKnjigu(Komentar.knjigaId).naziv }}</a>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"komentar\">\r\n        <th mat-header-cell *matHeaderCellDef> Komentar: </th>\r\n        <td mat-cell *matCellDef=\"let Komentar\"> {{ Komentar.komentar }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"ocena\">\r\n        <th mat-header-cell *matHeaderCellDef> Ocena: </th>\r\n        <td mat-cell *matCellDef=\"let Komentar\"> {{ Komentar.ocena }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"zanr\">\r\n        <th mat-header-cell *matHeaderCellDef> Zanr: </th>\r\n        <td mat-cell *matCellDef=\"let Komentar\"> {{ pokupiKnjigu(Komentar.knjigaId).zanr }}</td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"commentsTableColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: commentsTableColumns;\"></tr>\r\n    </table>\r\n  </mat-card>\r\n  <br>\r\n</div>","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\r\nimport { Korisnik } from 'src/app/modules/Korisnik';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ProfileComponent } from '../profile/profile.component';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Table } from 'src/app/modules/Table';\r\n\r\n@Component({\r\n  selector: 'app-profiles-page',\r\n  templateUrl: './profiles-page.component.html',\r\n  styleUrls: ['./profiles-page.component.css']\r\n})\r\nexport class ProfilesPageComponent implements OnInit, OnDestroy {\r\n  @ViewChild(ProfileComponent) profileChild: ProfileComponent\r\n\r\n  requestedUser: string\r\n\r\n  showUserTableParams: Table\r\n  showUserTable: boolean\r\n  showUser: Boolean\r\n\r\n  constructor(private userService: UserService, private data: DataService) {\r\n    this.showUser = true\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.showUserTableParams = {\r\n      searchObject: \"profil\",\r\n      searchParams: [\"ime\", \"prezime\", \"korisnickoIme\"],\r\n      linkParam: \"korisnickoIme\",\r\n      tableData: [],\r\n      headerMap: {\r\n        ime: \"Ime\",\r\n        prezime: \"Prezime\",\r\n        korisnickoIme: \"Korisnicko Ime\"\r\n      },\r\n      buttonLabel: \"\"\r\n    }\r\n    this.data.tableData.subscribe(tableData => this.showUserTableParams.tableData = tableData)\r\n    this.data.setShowTable(false)\r\n    this.data.showTable.subscribe(showTable => this.showUserTable = showTable)\r\n\r\n    this.data.requestedUser.subscribe(requestedUser => this.requestedUser = requestedUser)\r\n    if (this.requestedUser != \"\")\r\n      this.openProfile()\r\n    else\r\n      this.data.setLoadedUser(this.userService.nadjiKorisnikaId(this.data.dohvatiKorisnika().id))\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.data.changeRequestedUser(\"\")\r\n    this.data.setTableData([])\r\n  }\r\n\r\n  async openProfile(): Promise<void> {\r\n    this.data.setLoadedUser(await this.userService.nadjiKorisnikaKorisnickoIme(this.requestedUser))\r\n    this.showUser = true\r\n    if (this.profileChild) {\r\n      this.profileChild.prikaziKorisnika()\r\n    }\r\n  }\r\n}\r\n","<div class=\"content\">\r\n    <app-search [searchParams]=\"showUserTableParams\"></app-search>\r\n    <app-table *ngIf=\"showUserTable\" [tableParams]=\"showUserTableParams\" (linkClick)=\"openProfile()\"></app-table>\r\n    <app-profile *ngIf=\"showUser\"></app-profile>\r\n    <br>\r\n</div>","import { Component, OnInit } from '@angular/core'\r\nimport { Router } from '@angular/router'\r\nimport { UserService } from 'src/app/services/user.service'\r\nimport { Korisnik } from 'src/app/modules/Korisnik'\r\nimport { ValidatorService } from 'src/app/services/validator.service'\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  siteKey:string\r\n  captchaCheck:boolean\r\n  korisnik:Korisnik\r\n\r\n  usernameCheck:boolean\r\n  passwordCheck:boolean\r\n  emailCheck:boolean\r\n\r\n\r\n  constructor(private router:Router, private userService:UserService, private validatorService: ValidatorService) {\r\n    this.siteKey = \"6Le2UcUZAAAAAHKv4dh2moTO_XPyNeDIbb4pY7ew\"\r\n    this.captchaCheck = false\r\n    \r\n    this.korisnik = {\r\n      id: 0,\r\n      AT: 1,\r\n      ime: '',\r\n      prezime:' ',\r\n      slika: '',\r\n      korisnickoIme: '',\r\n      lozinka: '',\r\n      datumRodjenja: '',\r\n      grad: '',\r\n      drzava: '',\r\n      email: '',\r\n      procitaneKnjige: [],\r\n      citamKnjige: [],\r\n      zaCitanjeKnjige: []\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  register():void {\r\n    console.log(this.korisnik.datumRodjenja)\r\n    this.usernameCheck = this.validatorService.validateUsername(this.korisnik.korisnickoIme)\r\n    this.passwordCheck = this.validatorService.validatePassword(this.korisnik.lozinka)\r\n    this.emailCheck = this.validatorService.validateEmail(this.korisnik.email)\r\n    \r\n    // Odradi prvo provere sve koje su potrebne nad unetim poljima\r\n    if(this.usernameCheck && this.passwordCheck && this.emailCheck) {\r\n      this.userService.dodajKorisnika(this.korisnik)\r\n      this.router.navigate(['/login'])\r\n    }\r\n  }\r\n\r\n  back():void {\r\n    this.router.navigate(['/login'])\r\n  }\r\n\r\n}\r\n","<div id=\"mainContent\">\r\n    <div class=\"content\">\r\n        <br>\r\n        <mat-card class=\"mat-elevation-z8\">\r\n\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Ime:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.ime\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Prezime:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.prezime\" required>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Korisnicko Ime:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.korisnickoIme\" required>\r\n                <mat-error>Neispravno uneto korisnicko ime</mat-error>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Lozinka:</mat-label>\r\n                <input matInput type=\"password\" [(ngModel)]=\"korisnik.lozinka\" required>\r\n                <mat-error>Neispravno uneta lozinka</mat-error>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Datum Rodjenja:</mat-label>\r\n                <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"korisnik.datumRodjenja\" required>\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #picker></mat-datepicker>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Mesto Prebivanja:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.grad\" required>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>Drzava Prebivanja:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.drzava\" required>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <mat-form-field appearance=\"legacy\">\r\n                <mat-label>email Adresa:</mat-label>\r\n                <input matInput [(ngModel)]=\"korisnik.email\" required>\r\n                <mat-error>Neispravno unet email</mat-error>\r\n            </mat-form-field>\r\n            <br>\r\n\r\n            <div class=\"captcha\">\r\n                <ngx-recaptcha2 #captchaElem [siteKey]=\"siteKey\" (success)=\"captchaCheck = true\">\r\n                </ngx-recaptcha2>\r\n            </div>\r\n\r\n            <button mat-raised-button *ngIf=\"captchaCheck\" (click)=\"register()\"> Zavrsi registraciju </button><br>\r\n            <button mat-raised-button (click)=\"back()\">Nazad</button>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Table } from 'src/app/modules/Table';\r\nimport { BookService } from 'src/app/services/book.service';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  @Output() showAddOption = new EventEmitter<any>()\r\n  @Input() searchParams: Table\r\n\r\n  hintParams: Array<string>\r\n\r\n  searchHint: string\r\n  searchResponse: Array<any>\r\n  searchQuery: string\r\n\r\n\r\n  constructor(private userService: UserService, private bookService: BookService, private data: DataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchHint = this.searchParams.searchParams[0]\r\n    this.hintParams = new Array()\r\n    for (let string of this.searchParams.searchParams) \r\n      this.hintParams.push(string)\r\n    if (this.hintParams[this.hintParams.length - 1] == \"button\")\r\n      this.hintParams.splice(this.hintParams.length - 1, 1)\r\n  }\r\n\r\n  search() {\r\n    switch (this.searchParams.searchObject) {\r\n      case \"knjiga\": this.searchResponse = this.bookService.nadjiKnjigu(this.searchHint, this.searchQuery)\r\n        if (this.searchResponse.length == 0)\r\n          this.showAddOption.emit(true)\r\n        break\r\n      case \"profil\": this.searchResponse = this.userService.nadjiKorisnika(this.searchHint, this.searchQuery)\r\n        break\r\n    }\r\n    \r\n    if (this.searchResponse.length != 0) {\r\n      this.data.setTableData(this.searchResponse)\r\n      this.data.setShowTable(true)\r\n    }\r\n    else {\r\n      this.data.setShowTable(false)\r\n    }\r\n  }\r\n\r\n  searchTypeSelect($event) {\r\n    this.searchHint = $event.value\r\n  }\r\n\r\n  searchResponseData() {\r\n\r\n  }\r\n}\r\n","<br>\r\n<div class=\"content\">\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-form-field appearance=\"legacy\">\r\n            <mat-label>Pretraga</mat-label>\r\n            <input matInput [(ngModel)]=\"searchQuery\" value=\"{{ searchQuery }}\" (keydown.enter)=\"search()\">\r\n            <mat-icon matSuffix>search</mat-icon>\r\n            <mat-hint>pretraga po parametru: {{ searchHint }}</mat-hint>\r\n        </mat-form-field>\r\n        <br><br>\r\n        <mat-radio-group aria-label=\"Select\">\r\n            <mat-radio-button *ngFor=\"let string of hintParams\" [value]=\"string\" (change)=\"searchTypeSelect($event)\"\r\n                [checked]=\"hintParams[0] == string\">{{ string }}</mat-radio-button>\r\n        </mat-radio-group>\r\n    </mat-card>\r\n</div>","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\r\nimport { Table } from 'src/app/modules/Table';\r\nimport { BookService } from 'src/app/services/book.service';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css']\r\n})\r\nexport class TableComponent implements OnInit {\r\n  @Output() linkClick = new EventEmitter()\r\n  @Input() tableParams: Table\r\n  \r\n  AT: number\r\n  tableSizeOptions: Array<number> // Set of options for table size\r\n\r\n  constructor(private data: DataService, private bookService: BookService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.tableSizeOptions = [1, 5, 15, 50]\r\n\r\n    this.data.loggedUserAT.subscribe(AT => this.AT = AT)\r\n    this.tableParams.tableData.slice(0, this.tableSizeOptions[1]);\r\n  }\r\n\r\n  // emits that link inside table is clicked\r\n  // parent should open object of the same type parent class is\r\n  openSelected(nesto: string) {\r\n    switch (this.tableParams.searchObject) {\r\n      case \"knjiga\": this.data.changeRequestedBook(nesto)\r\n        break\r\n      case \"profil\": this.data.changeRequestedUser(nesto)\r\n        break\r\n      case \"desavanje\": console.log(\"Desavanje \" + nesto + \" trazeno!\")// smisli\r\n        break\r\n    }\r\n    this.linkClick.emit()\r\n  }\r\n\r\n  buttonClick(obj: any) {\r\n    switch (this.AT) {\r\n      case 2: console.log(\"Moderator click\")\r\n        console.log(obj)\r\n        obj[\"odobrena\"] = true\r\n        if (obj[\"odobrena\"])\r\n          // Sacuvaj knjigu\r\n        break\r\n      case 3: console.log(\"Admin click\")\r\n        console.log(obj)\r\n    }\r\n  }\r\n\r\n  onPageChanged(e) {\r\n    let firstCut = e.pageIndex * e.pageSize;\r\n    let secondCut = firstCut + e.pageSize;\r\n    this.tableParams.tableData.slice(firstCut, secondCut);\r\n  }\r\n\r\n}\r\n","<div>\r\n    <br>\r\n    <mat-card class=\"mat-elevation-z8 specialTable\">\r\n        <table mat-table [dataSource]='tableParams.tableData' class=\"specialTable\">\r\n\r\n            <ng-container *ngFor=\"let string of tableParams.searchParams\" [matColumnDef]=\"string\">\r\n                <th mat-header-cell *matHeaderCellDef> {{ tableParams.headerMap[string] }} </th>\r\n                <td mat-cell *matCellDef=\"let Object\">\r\n                    <a *ngIf=\"string == tableParams.linkParam\" [routerLink]=\"\"\r\n                        (click)='openSelected(Object[string])'>{{ Object[string] }}</a>\r\n                    <Label *ngIf=\"string != tableParams.linkParam && string != 'button'\">{{ Object[string] }}</Label>\r\n                    <Button *ngIf=\"string == 'button' && AT > 1 && Object['odobrena'] == false\"\r\n                        (click)=\"buttonClick(Object)\">{{ tableParams.buttonLabel }}</Button>\r\n                </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"tableParams.searchParams\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: tableParams.searchParams;\"></tr>\r\n        </table>\r\n        <mat-paginator [length]=\"tableParams.tableData.length\" [pageSize]=\"tableSizeOptions[1]\"\r\n            [pageSizeOptions]=\"tableSizeOptions\" (page)=\"onPageChanged($event)\"></mat-paginator>\r\n    </mat-card>\r\n</div>","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appUser]'\r\n})\r\nexport class UserDirective {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Knjiga } from '../modules/Knjiga';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BookService {\r\n  knjigeLista: Knjiga[]\r\n\r\n  constructor() {\r\n    this.fillKnjigeLista()\r\n  }\r\n\r\n  // Method to add a book in database\r\n  dodajKnjigu(knjiga: Knjiga): void {\r\n    this.knjigeLista.push(knjiga)\r\n  }\r\n\r\n  // Method to find the book based on param 'id'\r\n  nadjiKnjiguId(id: number): Knjiga {\r\n    var bookFound = this.knjigeLista.filter(x => x.id == id)\r\n    if (bookFound.length > 0) {\r\n      return bookFound[0]\r\n    }\r\n    else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Method to find the book based on param 'naziv'\r\n  nadjiKnjiguNaziv(naziv: string): Knjiga {\r\n    var bookFound = this.knjigeLista.filter(x => x.naziv == naziv)\r\n    if (bookFound.length > 0) \r\n      return bookFound[0]\r\n    else \r\n      return null\r\n  }\r\n\r\n  // Method returns full list of objects of type 'Knjiga' based on params\r\n  // Returns list of books based on searchQuery where searchQuery matches searchParam.value\r\n  nadjiKnjigu(searchParam: string, searchQuery: string): Array<Knjiga> {\r\n    if (Array.isArray(this.knjigeLista[0][searchParam]))\r\n      return this.knjigeLista.filter(x => x[searchParam].some(element => {\r\n        return (element == searchQuery)\r\n      }))\r\n    else\r\n      return this.knjigeLista.filter(x => x[searchParam] == searchQuery)\r\n  }\r\n\r\n  // Temporary method for testing purposes\r\n  fillKnjigeLista(): void {\r\n    this.knjigeLista = [\r\n      {\r\n        id: 1,\r\n        slika: 'asd',\r\n        naziv: 'Na drini cuprija',\r\n        autor: ['Ivo Andric'],\r\n        datumIzdavanja: '01/03/1945',\r\n        zanr: ['Istorija', 'Fikcija'],\r\n        opis: 'bla bla bla',\r\n        prosecnaOcena: 4.5,\r\n        brStrana: 574,\r\n        odobrena: true\r\n      },\r\n      {\r\n        id: 2,\r\n        slika: 'asd',\r\n        naziv: 'The Revenant',\r\n        autor: ['Leo'],\r\n        datumIzdavanja: '01/03/2015',\r\n        zanr: ['Fantastika'],\r\n        opis: 'blu blu blu',\r\n        prosecnaOcena: 4.2,\r\n        brStrana: 300,\r\n        odobrena: true\r\n      },\r\n      {\r\n        id: 3,\r\n        slika: 'asd',\r\n        naziv: 'What If?',\r\n        autor: ['Neka likusa'],\r\n        datumIzdavanja: '01/03/2020',\r\n        zanr: ['Fantastika'],\r\n        opis: 'ble ble ble',\r\n        prosecnaOcena: 3.2,\r\n        brStrana: 800,\r\n        odobrena: false\r\n      },\r\n      {\r\n        id: 4,\r\n        slika: 'asd',\r\n        naziv: 'Avengers',\r\n        autor: ['MARVEL'],\r\n        datumIzdavanja: '01/03/1998',\r\n        zanr: ['Fantastika', 'Fikcija'],\r\n        opis: 'ble ble ble',\r\n        prosecnaOcena: 4.2,\r\n        brStrana: 50,\r\n        odobrena: true\r\n      }\r\n    ]\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Komentar } from '../modules/Komentar';\r\nimport { DataService } from './data.service';\r\nimport { Korisnik } from '../modules/Korisnik';\r\nimport { Knjiga } from '../modules/Knjiga';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentService {\r\n  komentarLista:Komentar[]\r\n\r\n  constructor(private data:DataService) {\r\n    this.fillKomentariLista()\r\n  }\r\n\r\n  // Method to add a comment in database\r\n  dodajKomentar(korisnikId:number, knjigaId:number, ocena:number, komentar:string):void {\r\n    this.komentarLista.push({\r\n      id: this.komentarLista.length,\r\n      korisnikId: korisnikId,\r\n      knjigaId: knjigaId,\r\n      komentar: komentar,\r\n      ocena: ocena\r\n    })\r\n  }\r\n\r\n  // Method to delete a comment in database\r\n  obrisiKomentar():void {\r\n\r\n  }\r\n\r\n  // Method to edit a comment in database\r\n  izmeniKomentar(komentar:string, ocena:number, korisnikId:number, knjigaId:number):void {\r\n    this.komentarLista.filter(x => x.korisnikId == korisnikId).filter(y => y.knjigaId == knjigaId)[0].komentar = komentar\r\n    this.komentarLista.filter(x => x.korisnikId == korisnikId).filter(y => y.knjigaId == knjigaId)[0].ocena = ocena\r\n  }\r\n\r\n  // Method to find the comment in database based on 'user.id' and 'book.id' params\r\n  nadjiKomentar(korisnikId:number, knjigaId:number):Komentar {\r\n    var pronadjeniKomentari = this.komentarLista.filter(x => x.korisnikId == korisnikId).filter(y => y.knjigaId == knjigaId)\r\n    if (pronadjeniKomentari.length > 0) {\r\n      return pronadjeniKomentari[0]\r\n    }\r\n    else return null\r\n  }\r\n\r\n  // Method returns full list of comments based on 'user.id' param\r\n  nadjiKorisnikKomentare(korisnik:Korisnik):Komentar[] {\r\n    var pronadjeniKomentari = this.komentarLista.filter(x => x.korisnikId == korisnik.id)\r\n    if (pronadjeniKomentari.length > 0) {\r\n      return pronadjeniKomentari\r\n    }\r\n    else return []\r\n  }\r\n\r\n  // Method returns full list of comments based on 'book' param\r\n  nadjiKnjigaKomentare(knjiga:Knjiga):Komentar[] {\r\n    var pronadjeniKomentari = this.komentarLista.filter(x => x.knjigaId == knjiga.id)\r\n    if (pronadjeniKomentari.length > 0) {\r\n      return pronadjeniKomentari\r\n    }\r\n    else return []\r\n  }\r\n\r\n  // Temporary method for testing purposes\r\n  fillKomentariLista():void {\r\n    this.komentarLista = [\r\n      {\r\n        id: 1,\r\n        korisnikId: 1,\r\n        knjigaId: 1,\r\n        komentar: 'Evo meni se ova knjiga nije svidela.',\r\n        ocena: 2\r\n      },\r\n      {\r\n        id: 2,\r\n        korisnikId: 2,\r\n        knjigaId: 1,\r\n        komentar: 'Glamorous AF',\r\n        ocena: 4.5\r\n      },\r\n      {\r\n        id: 3,\r\n        korisnikId: 2,\r\n        knjigaId: 2,\r\n        komentar: 'Did not understant a single word, except \"SEX\".',\r\n        ocena: 5\r\n      },\r\n    ]\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Korisnik } from '../modules/Korisnik';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Knjiga } from '../modules/Knjiga';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  // Holds the authority token of logged user\r\n  private loggedUserATSource = new BehaviorSubject(0)\r\n  loggedUserAT = this.loggedUserATSource.asObservable()\r\n\r\n  // Holds the data of requested user after clicking the link to the user\r\n  private requestedUserSource = new BehaviorSubject('')\r\n  requestedUser = this.requestedUserSource.asObservable()\r\n\r\n  // Holds the currently loaded(to be displayed) book\r\n  private loadedBookSource = new BehaviorSubject<Knjiga>({\r\n    id: 0,\r\n    slika: '',\r\n    naziv: '',\r\n    autor: [],\r\n    datumIzdavanja: '',\r\n    zanr: [],\r\n    opis: '',\r\n    prosecnaOcena: 0,\r\n    brStrana: 0,\r\n    odobrena: false\r\n  })\r\n  loadedBook = this.loadedBookSource.asObservable()\r\n\r\n  // Holds the currently loaded(to be displayed) user\r\n  private loadedUserSource = new BehaviorSubject<Korisnik>({\r\n    id: 0,\r\n    AT: 1,\r\n    ime: '',\r\n    prezime:'',\r\n    slika: '',\r\n    korisnickoIme: '',\r\n    lozinka: '',\r\n    datumRodjenja: '',\r\n    grad: '',\r\n    drzava: '',\r\n    email: '',\r\n    procitaneKnjige: [],\r\n    citamKnjige: [],\r\n    zaCitanjeKnjige: []\r\n  })\r\n  loadedUser = this.loadedUserSource.asObservable()\r\n\r\n  // Holds the data of requested book after clicking the link to the book\r\n  private requestedBookSource = new BehaviorSubject('')\r\n  requestedBook = this.requestedBookSource.asObservable()\r\n\r\n  // Holds the selected tab index\r\n  // App changes tab in menu on value change \r\n  private selectedTabSource = new BehaviorSubject(0)\r\n  selectedTab = this.selectedTabSource.asObservable()\r\n\r\n  // Holds the data of which object is requested for search\r\n  /*private searchObjectSource = new BehaviorSubject('')\r\n  searchObject = this.searchObjectSource.asObservable()\r\n\r\n  // Holds the data of params which are to be displayed in table\r\n  private searchParamsSource = new BehaviorSubject<Array<string>>([])\r\n  searchParams = this.searchParamsSource.asObservable()\r\n\r\n  // Holds the data which column of table should be rendered as a link\r\n  private searchLinkParamSource = new BehaviorSubject('')\r\n  searchLinkParam = this.searchLinkParamSource.asObservable()\r\n\r\n  // Holds the data in object as a form of map to which param should be \r\n  // represented in which specifically format(namewise)\r\n  private searchTableHeadersParamsSource = new BehaviorSubject<Object>({})\r\n  searchTableHeadersParams = this.searchTableHeadersParamsSource.asObservable()*/\r\n\r\n  // Holds the data which are to be displayed in table\r\n  private tableDataSource = new BehaviorSubject<Array<any>>([])\r\n  tableData = this.tableDataSource.asObservable()\r\n\r\n  // Holds the data which controls if table should be rendered or not\r\n  private showTableSource = new BehaviorSubject<boolean>(false)\r\n  showTable = this.showTableSource.asObservable()\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /*  Ovde mozda treba da se stavi da kad god se zove ova metoda on odradi refresh na bazi\r\n   *  ali obavezno proveri da li tako da odradis jer bi se to pozvalo i prvi put kada podesavas \r\n   *  session logged user!   \r\n   */\r\n\r\n  setLoggedUserAT(at:number):void {\r\n    this.loggedUserATSource.next(at)\r\n  }\r\n\r\n  postaviKorisnika(korisnik: Korisnik): void {\r\n    sessionStorage.setItem('ulogovaniKorisnik', JSON.stringify(korisnik))\r\n    this.loggedUserATSource.next(korisnik.AT)\r\n  }\r\n\r\n  dohvatiKorisnika(): Korisnik {\r\n    return JSON.parse(sessionStorage.getItem('ulogovaniKorisnik'));\r\n  }\r\n\r\n  changeRequestedUser(newRequestedUser: string) {\r\n    this.requestedUserSource.next(newRequestedUser)\r\n  }\r\n\r\n  changeRequestedBook(newRequestedBook: string) {\r\n    this.requestedBookSource.next(newRequestedBook)\r\n  }\r\n\r\n  setLoadedBook(book: Knjiga) {\r\n    this.loadedBookSource.next(book)\r\n  }\r\n\r\n  setLoadedUser(user: Korisnik) {\r\n    this.loadedUserSource.next(user)\r\n  }\r\n\r\n  changeTab(index: number) {\r\n    this.selectedTabSource.next(index)\r\n  }\r\n\r\n  setTableData(params: Array<any>) {\r\n    this.tableDataSource.next(params)\r\n  }\r\n\r\n  setShowTable(showTable: boolean) {\r\n    this.showTableSource.next(showTable)\r\n  }\r\n\r\n  /*setSearchObject(object: string) {\r\n    this.searchObjectSource.next(object)\r\n  }\r\n\r\n  setSearchParams(params: Array<string>) {\r\n    this.searchParamsSource.next(params)\r\n  }\r\n\r\n  setSearchLinkParam(linkParam: string) {\r\n    this.searchLinkParamSource.next(linkParam)\r\n  }\r\n\r\n  setSearchTableHeadersParams(headerParams: object) {\r\n    this.searchTableHeadersParamsSource.next(headerParams)\r\n  }*/\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Desavanje } from '../modules/Desavanje'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n  desavanjeLista: Desavanje[]\r\n\r\n  constructor() {\r\n    this.fillDesavanjaLista()\r\n  }\r\n\r\n  // Method returns full list of events based on params\r\n  nadjiDesavanja(searchParam: string, searchQuery: string): Array<Desavanje> {\r\n    if (Array.isArray(this.desavanjeLista[0][searchParam]))\r\n      return this.desavanjeLista.filter(x => x[searchParam].some(element => {\r\n        return (element == searchQuery)\r\n      }))\r\n    else\r\n      return this.desavanjeLista.filter(x => x[searchParam] == searchQuery)\r\n  }\r\n\r\n  // Method returns full list of events\r\n  getAllEvents(): Array<Desavanje> {\r\n    return this.desavanjeLista\r\n  }\r\n\r\n  // Temporary method for testing purposes\r\n  fillDesavanjaLista(): void {\r\n    this.desavanjeLista = [\r\n      {\r\n        id: 1,\r\n        privatno: true,\r\n        naziv: \"Babyshower\",\r\n        pocetak: new Date(),\r\n        kraj: new Date(),\r\n        opis: \"Ne znam, zene se okupljaju i tako to svasta, ne znam...\",\r\n        aktivno: true,\r\n        kreator: \"tduca998\"\r\n      },\r\n      {\r\n        id: 2,\r\n        privatno: false,\r\n        naziv: \"Signing\",\r\n        pocetak: new Date(),\r\n        kraj: new Date(),\r\n        opis: \"Dr. Castle potpisuje knjige dok obozavaoci dolaze i govore neke cringe citate iz knjige\",\r\n        aktivno: false,\r\n        kreator: \"rorynius\"\r\n      }\r\n    ]\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Korisnik } from '../modules/Korisnik';\r\nimport { DataService } from './data.service';\r\nimport axios, { AxiosInstance } from 'axios'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  korisnikLista:Korisnik[]\r\n  axiosRequest: AxiosInstance\r\n\r\n  constructor(private data:DataService) { \r\n    this.fillPreduzeceLista() // temp za punjenje\r\n    /*axios.defaults.proxy = {\r\n      host: '127.0.0.1',\r\n      port: 5000\r\n    }*/\r\n    //axios.defaults.baseURL = 'http://localhost:5000/'\r\n    this.axiosRequest = axios.create({\r\n      baseURL: 'http://localhost:5000/',\r\n      timeout: 1000\r\n    })\r\n  }\r\n\r\n  sacuvajKorisnika(korisnik:Korisnik):void {\r\n    //this.korisnikLista.filter(x => x.id == korisnik.id)[0]\r\n    //this.korisnikLista[this.korisnikLista.indexOf(this.korisnikLista.filter(x => x.id == korisnik.id)[0])] = korisnik\r\n  }\r\n\r\n  dodajKorisnika(korisnik:Korisnik):void {\r\n    this.korisnikLista.push(korisnik)\r\n  }\r\n\r\n  obrisiKorisnika(korisnik:Korisnik):void {\r\n    var index = this.korisnikLista.indexOf(korisnik)\r\n    this.korisnikLista.splice(index, 1)\r\n  }\r\n\r\n  nadjiKorisnika(searchParam: string, searchQuery: string): Array<Korisnik> {\r\n    if (Array.isArray(this.korisnikLista[0][searchParam]))\r\n      return this.korisnikLista.filter(x => x[searchParam].some(element => {\r\n        return (element == searchQuery)\r\n      }))\r\n    else\r\n      return this.korisnikLista.filter(x => x[searchParam] == searchQuery)\r\n  }\r\n\r\n  async nadjiKorisnikaKorisnickoIme(korisnickoIme: string): Promise<Korisnik> {\r\n    //API call\r\n    //await axios.get(`API/users?korisnickoIme=${korisnickoIme}`)\r\n    await this.axiosRequest.get(`API/users?korisnickoIme=${korisnickoIme}`)\r\n    .then( response => {\r\n      console.log(response)\r\n    })\r\n    .catch( err => {\r\n      console.log(err)\r\n    })\r\n\r\n\r\n    // Hardcode\r\n    var userFound = this.korisnikLista.filter(x => x.korisnickoIme == korisnickoIme)\r\n    if (userFound.length > 0)\r\n      return userFound[0]\r\n    else\r\n      return null\r\n  }\r\n\r\n  nadjiKorisnikaId(id:number):Korisnik {\r\n    return this.korisnikLista.filter(x => x.id == id)[0]\r\n  }\r\n\r\n  korisnikLogIn(username:string, password:string):boolean {\r\n    var userFound = this.korisnikLista.filter(x => x.korisnickoIme == username && x.lozinka == password)\r\n    if (userFound.length > 0) {\r\n      this.data.postaviKorisnika(userFound[0])\r\n      console.log('User ' + username + ' found! ')\r\n      return true\r\n    }\r\n    else {\r\n      console.log('User ' + username + ' does not exists!')\r\n      return false\r\n    }\r\n  }\r\n\r\n  /* Totalno nebitne metode, privremeno u upotrebi radi pravljenja funkcionalnosti ostatka app */\r\n  fillPreduzeceLista():void {\r\n    this.korisnikLista = [\r\n      {\r\n        id: 1,\r\n        AT: 1,\r\n        ime: 'Dusan',\r\n        prezime:'Tomanic',\r\n        slika: 'nah',\r\n        korisnickoIme: 'tduca998',\r\n        lozinka: '1234',\r\n        datumRodjenja: '11/02/1998',\r\n        grad: 'Stara Pazova',\r\n        drzava: 'Srbija',\r\n        email: 'tduca998@gmail.com',\r\n        procitaneKnjige: [],\r\n        citamKnjige: [[1, 10, 1], [2, 15, 0]],\r\n        zaCitanjeKnjige: []\r\n      },\r\n      {\r\n        id: 2,\r\n        AT: 2,\r\n        ime: 'Rory',\r\n        prezime:'Wolk',\r\n        slika: 'gay',\r\n        korisnickoIme: 'rorynius',\r\n        lozinka: 'asd',\r\n        datumRodjenja: '20/05/1970',\r\n        grad: 'San Francisco',\r\n        drzava: 'USA',\r\n        email: 'rory@wolk.com',\r\n        procitaneKnjige: [2, 3],\r\n        citamKnjige: [[1, 20, 1]],\r\n        zaCitanjeKnjige: [1]\r\n      }\r\n    ]\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidatorService {\r\n\r\n  private usernameRegEx: RegExp\r\n  private emailEgEx: RegExp\r\n  private passwordRegEx: RegExp\r\n\r\n  constructor() {\r\n    this.usernameRegEx = new RegExp(/\\w{4}/gi) // minimum number of char (8)\r\n    this.emailEgEx = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\r\n    this.passwordRegEx = new RegExp(/\\w{8}/gi) \r\n  }\r\n\r\n  validateUsername(username: string): boolean {\r\n    if (username.search(this.usernameRegEx) == 0) return true;\r\n    else return false;\r\n  }\r\n\r\n  validatePassword(password: string): boolean {\r\n    return true;\r\n  }\r\n\r\n  validateEmail(email: string): boolean {\r\n    if (email.search(this.emailEgEx) == 0) return true;\r\n    else return false;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}